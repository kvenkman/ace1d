;
; NRLMSISE-00 FROM NSSDC FORTRAN CODE
;
; Translated into IDL 12/6/01
;
;--------------------------------------------------------------------
pro tselec,sv
common tselcom,sav
common csw,sw,isw,swc

n = n_elements(sv)
if n ne 25 then begin
    message,"Switches must be 25-element array of values 0,1,2.",/info
    message,"No software switches modified.",/info
endif else begin
    sav = intarr(25)                  ;saved input values
    sav(0) = fix(sv) mod 3
    sw = float(sav mod 2)             ;software switches
    swc = sw*0.                       ;software cross-term switches
    s = where(abs(sav) gt 0)
    if s(0) ne -1 then swc(s) = 1.
    isw = 64999l
endelse
return
end
;--------------------------------------------------------------------
pro tretrv,sv
common tselcom,sav
sv = sav
return
END
;-----------------------------------------------------------------------
FUNCTION VTST7,IYD,SEC,GLAT,GLONG,STL,F107A,F107,AP,IC
;
;       Test if geophysical variables or switches changed and save
;       Return 0 if unchanged and 1 if changed
;
      COMMON CSW,SW,ISW,SWC
      common lastparams,iydl,secl,glatl,glonl,stll,fal,fl,apl,$
                        swl,swcl,initialized
;
; Initialize when function is called the first time
;
      if n_elements(initialized) eq 0 then begin
          iydl = replicate(-999,2)
          secl = replicate(-999,2)
          glatl = replicate(-999,2)
          glonl = replicate(-999,2)
          stll = replicate(-999,2)
          fal = replicate(-999,2)
          fl = replicate(-999,2)
          apl = replicate(-999,7,2)
          swl = replicate(-999,25,2)
          swcl = replicate(-999,25,2)
          initialized = 1
      endif
 ;
 ; Compare current and stored values
 ;
      last = [iydl(ic),secl(ic),glatl(ic),glonl(ic),stll(ic),$
              fal(ic),fl(ic),apl(*,ic),swl(*,ic),swcl(*,ic)]
      curr = [iyd,sec,glat,glong,stl,f107a,f107,ap,sw,swc]
      if total(curr-last) ne 0 then begin
          iydl(ic) = iyd
          secl(ic) = sec
          glatl(ic) = glat
          glonl(ic) = glong
          stll(ic) = stl
          fal(ic) = f107a
          fl(ic) = f107
          apl(0,ic) = ap
          swl(0,ic) = sw
          swcl(0,ic) = swc
          return,1
      endif else return,0
      end
;-----------------------------------------------------------------------
pro GLATF,LAT,GV,REFF
;      CALCULATE LATITUDE VARIABLE GRAVITY (GV) AND EFFECTIVE
;      RADIUS (REFF)
      DGTR=1.74533E-2
      C2 = COS(2.*DGTR*LAT)
      GV = 980.616*(1.-.0026373*C2)
      REFF = 2.*GV/(3.085462E-6 + 2.27E-9*C2)*1.E-5
      RETURN
      END
;--------------------------------------------------------------------
; Handy little function
;
FUNCTION ZETA,ZZ,ZL
COMMON PARMB,GSURF,RE
return,(ZZ-ZL)*(RE+ZL)/(RE+ZZ)
END
;-------------------------------------------------------------------------------
;
; Load data structures into common blocks
;
pro GTD7BK,dummy
      COMMON PARMB,GSURF,RE
      COMMON PARM7,PT,PD,PS,PDL,PTL,PMA,SAM,PARMFL
      COMMON LOWER7,PTM,PDM
      COMMON MAVG7,PAVGM
      COMMON DATIME,ISDATE,ISTIME,NAME
      COMMON METSEL,IMR
;
      MESSAGE,"Initializing parameter data blocks...",/info
      imr = 0
      isdate = '12-APR-00'
      istime = '17:46:08'
      NAME = 'MSISE-00'
      GSURF = 980.665
      RE = 6356.77       ;polar radius
      ;RE = 6367.43       ;(latiitudinal) mean radius
      ;RE = 6378.14       ;equatorial radius
;        TEMPERATURE
pt1 = [ 9.86573E-01, 1.62228E-02, 1.55270E-02,-1.04323E-01,-3.75801E-03,$
       -1.18538E-03,-1.24043E-01, 4.56820E-03, 8.76018E-03,-1.36235E-01,$
       -3.52427E-02, 8.84181E-03,-5.92127E-03,-8.61650E+00, 0.00000E+00,$
        1.28492E-02, 0.00000E+00, 1.30096E+02, 1.04567E-02, 1.65686E-03,$
       -5.53887E-06, 2.97810E-03, 0.00000E+00, 5.13122E-03, 8.66784E-02,$
        1.58727E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00,-7.27026E-06,$
        0.00000E+00, 6.74494E+00, 4.93933E-03, 2.21656E-03, 2.50802E-03,$
        0.00000E+00, 0.00000E+00,-2.08841E-02,-1.79873E+00, 1.45103E-03,$
        2.81769E-04,-1.44703E-03,-5.16394E-05, 8.47001E-02, 1.70147E-01,$
        5.72562E-03, 5.07493E-05, 4.36148E-03, 1.17863E-04, 4.74364E-03]
pt2 = [ 6.61278E-03, 4.34292E-05, 1.44373E-03, 2.41470E-05, 2.84426E-03,$
        8.56560E-04, 2.04028E-03, 0.00000E+00,-3.15994E+03,-2.46423E-03,$
        1.13843E-03, 4.20512E-04, 0.00000E+00,-9.77214E+01, 6.77794E-03,$
        5.27499E-03, 1.14936E-03, 0.00000E+00,-6.61311E-03,-1.84255E-02,$
       -1.96259E-02, 2.98618E+04, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        6.44574E+02, 8.84668E-04, 5.05066E-04, 0.00000E+00, 4.02881E+03,$
       -1.89503E-03, 0.00000E+00, 0.00000E+00, 8.21407E-04, 2.06780E-03,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
       -1.20410E-02,-3.63963E-03, 9.92070E-05,-1.15284E-04,-6.33059E-05,$
       -6.05545E-01, 8.34218E-03,-9.13036E+01, 3.71042E-04, 0.00000E+00]
pt3 = [ 4.19000E-04, 2.70928E-03, 3.31507E-03,-4.44508E-03,-4.96334E-03,$
       -1.60449E-03, 3.95119E-03, 2.48924E-03, 5.09815E-04, 4.05302E-03,$
        2.24076E-03, 0.00000E+00, 6.84256E-03, 4.66354E-04, 0.00000E+00,$
       -3.68328E-04, 0.00000E+00, 0.00000E+00,-1.46870E+02, 0.00000E+00,$
        0.00000E+00, 1.09501E-03, 4.65156E-04, 5.62583E-04, 3.21596E+00,$
        6.43168E-04, 3.14860E-03, 3.40738E-03, 1.78481E-03, 9.62532E-04,$
        5.58171E-04, 3.43731E+00,-2.33195E-01, 5.10289E-04, 0.00000E+00,$
        0.00000E+00,-9.25347E+04, 0.00000E+00,-1.99639E-03, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
;        HE DENSITY
pa1 = [ 1.09979E+00,-4.88060E-02,-1.97501E-01,-9.10280E-02,-6.96558E-03,$
        2.42136E-02, 3.91333E-01,-7.20068E-03,-3.22718E-02, 1.41508E+00,$
        1.68194E-01, 1.85282E-02, 1.09384E-01,-7.24282E+00, 0.00000E+00,$
        2.96377E-01,-4.97210E-02, 1.04114E+02,-8.61108E-02,-7.29177E-04,$
        1.48998E-06, 1.08629E-03, 0.00000E+00, 0.00000E+00, 8.31090E-02,$
        1.12818E-01,-5.75005E-02,-1.29919E-02,-1.78849E-02,-2.86343E-06,$
        0.00000E+00,-1.51187E+02,-6.65902E-03, 0.00000E+00,-2.02069E-03,$
        0.00000E+00, 0.00000E+00, 4.32264E-02,-2.80444E+01,-3.26789E-03,$
        2.47461E-03, 0.00000E+00, 0.00000E+00, 9.82100E-02, 1.22714E-01,$
       -3.96450E-02, 0.00000E+00,-2.76489E-03, 0.00000E+00, 1.87723E-03]
pa2 = [-8.09813E-03, 4.34428E-05,-7.70932E-03, 0.00000E+00,-2.28894E-03,$
       -5.69070E-03,-5.22193E-03, 6.00692E-03,-7.80434E+03,-3.48336E-03,$
       -6.38362E-03,-1.82190E-03, 0.00000E+00,-7.58976E+01,-2.17875E-02,$
       -1.72524E-02,-9.06287E-03, 0.00000E+00, 2.44725E-02, 8.66040E-02,$
        1.05712E-01, 3.02543E+04, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
       -6.01364E+03,-5.64668E-03,-2.54157E-03, 0.00000E+00, 3.15611E+02,$
       -5.69158E-03, 0.00000E+00, 0.00000E+00,-4.47216E-03,-4.49523E-03,$
        4.64428E-03, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        4.51236E-02, 2.46520E-02, 6.17794E-03, 0.00000E+00, 0.00000E+00,$
       -3.62944E-01,-4.80022E-02,-7.57230E+01,-1.99656E-03, 0.00000E+00]
pa3 = [-5.18780E-03,-1.73990E-02,-9.03485E-03, 7.48465E-03, 1.53267E-02,$
        1.06296E-02, 1.18655E-02, 2.55569E-03, 1.69020E-03, 3.51936E-02,$
       -1.81242E-02, 0.00000E+00,-1.00529E-01,-5.10574E-03, 0.00000E+00,$
        2.10228E-03, 0.00000E+00, 0.00000E+00,-1.73255E+02, 5.07833E-01,$
       -2.41408E-01, 8.75414E-03, 2.77527E-03,-8.90353E-05,-5.25148E+00,$
       -5.83899E-03,-2.09122E-02,-9.63530E-03, 9.77164E-03, 4.07051E-03,$
        2.53555E-04,-5.52875E+00,-3.55993E-01,-2.49231E-03, 0.00000E+00,$
        0.00000E+00, 2.86026E+01, 0.00000E+00, 3.42722E-04, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
;        O DENSITY
pb1 = [ 1.02315E+00,-1.59710E-01,-1.06630E-01,-1.77074E-02,-4.42726E-03,$
        3.44803E-02, 4.45613E-02,-3.33751E-02,-5.73598E-02, 3.50360E-01,$
        6.33053E-02, 2.16221E-02, 5.42577E-02,-5.74193E+00, 0.00000E+00,$
        1.90891E-01,-1.39194E-02, 1.01102E+02, 8.16363E-02, 1.33717E-04,$
        6.54403E-06, 3.10295E-03, 0.00000E+00, 0.00000E+00, 5.38205E-02,$
        1.23910E-01,-1.39831E-02, 0.00000E+00, 0.00000E+00,-3.95915E-06,$
        0.00000E+00,-7.14651E-01,-5.01027E-03, 0.00000E+00,-3.24756E-03,$
        0.00000E+00, 0.00000E+00, 4.42173E-02,-1.31598E+01,-3.15626E-03,$
        1.24574E-03,-1.47626E-03,-1.55461E-03, 6.40682E-02, 1.34898E-01,$
       -2.42415E-02, 0.00000E+00, 0.00000E+00, 0.00000E+00, 6.13666E-04]
pb2 = [-5.40373E-03, 2.61635E-05,-3.33012E-03, 0.00000E+00,-3.08101E-03,$
       -2.42679E-03,-3.36086E-03, 0.00000E+00,-1.18979E+03,-5.04738E-02,$
       -2.61547E-03,-1.03132E-03, 1.91583E-04,-8.38132E+01,-1.40517E-02,$
       -1.14167E-02,-4.08012E-03, 1.73522E-04,-1.39644E-02,-6.64128E-02,$
       -6.85152E-02,-1.34414E+04, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        6.07916E+02,-4.12220E-03,-2.20996E-03, 0.00000E+00, 1.70277E+03,$
       -4.63015E-03, 0.00000E+00, 0.00000E+00,-2.25360E-03,-2.96204E-03,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        3.92786E-02, 1.31186E-02,-1.78086E-03, 0.00000E+00, 0.00000E+00,$
       -3.90083E-01,-2.84741E-02,-7.78400E+01,-1.02601E-03, 0.00000E+00]
pb3 = [-7.26485E-04,-5.42181E-03,-5.59305E-03, 1.22825E-02, 1.23868E-02,$
        6.68835E-03,-1.03303E-02,-9.51903E-03, 2.70021E-04,-2.57084E-02,$
       -1.32430E-02, 0.00000E+00,-3.81000E-02,-3.16810E-03, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00,-9.05762E-04,-2.14590E-03,-1.17824E-03, 3.66732E+00,$
       -3.79729E-04,-6.13966E-03,-5.09082E-03,-1.96332E-03,-3.08280E-03,$
       -9.75222E-04, 4.03315E+00,-2.52710E-01, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
;         N2 DENSITY
pc1 = [ 1.16112E+00, 0.00000E+00, 0.00000E+00, 3.33725E-02, 0.00000E+00,$
        3.48637E-02,-5.44368E-03, 0.00000E+00,-6.73940E-02, 1.74754E-01,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 1.74712E+02, 0.00000E+00,$
        1.26733E-01, 0.00000E+00, 1.03154E+02, 5.52075E-02, 0.00000E+00,$
        0.00000E+00, 8.13525E-04, 0.00000E+00, 0.00000E+00, 8.66784E-02,$
        1.58727E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00,-2.50482E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-2.48894E-03,$
        6.16053E-04,-5.79716E-04, 2.95482E-03, 8.47001E-02, 1.70147E-01,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
pc2 = [ 0.00000E+00, 2.47425E-05, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
pc3 = [ 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
;         TLB
pd1 = [ 9.44846E-01, 0.00000E+00, 0.00000E+00,-3.08617E-02, 0.00000E+00,$
       -2.44019E-02, 6.48607E-03, 0.00000E+00, 3.08181E-02, 4.59392E-02,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 1.74712E+02, 0.00000E+00,$
        2.13260E-02, 0.00000E+00,-3.56958E+02, 0.00000E+00, 1.82278E-04,$
        0.00000E+00, 3.07472E-04, 0.00000E+00, 0.00000E+00, 8.66784E-02,$
        1.58727E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 3.83054E-03, 0.00000E+00, 0.00000E+00,$
       -1.93065E-03,-1.45090E-03, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00,-1.23493E-03, 1.36736E-03, 8.47001E-02, 1.70147E-01,$
        3.71469E-03, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
pd2 = [ 5.10250E-03, 2.47425E-05, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 3.68756E-03, 0.00000E+00, 0.00000E+00, 0.00000E+00]
pd3 = [ 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
;         O2 DENSITY
pe1 = [ 1.38720E+00, 1.44816E-01, 0.00000E+00, 6.07767E-02, 0.00000E+00,$
        2.94777E-02, 7.46900E-02, 0.00000E+00,-9.23822E-02, 8.57342E-02,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 2.38636E+01, 0.00000E+00,$
        7.71653E-02, 0.00000E+00, 8.18751E+01, 1.87736E-02, 0.00000E+00,$
        0.00000E+00, 1.49667E-02, 0.00000E+00, 0.00000E+00, 8.66784E-02,$
        1.58727E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00,-3.67874E+02, 5.48158E-03, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 8.47001E-02, 1.70147E-01,$
        1.22631E-02, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
pe2 = [ 8.17187E-03, 3.71617E-05, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-2.10826E-03,$
       -3.13640E-03, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
       -7.35742E-02,-5.00266E-02, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 1.94965E-02, 0.00000E+00, 0.00000E+00, 0.00000E+00]
pe3 = [ 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
;          Ar DENSITY
pf1 = [ 1.04761E+00, 2.00165E-01, 2.37697E-01, 3.68552E-02, 0.00000E+00,$
        3.57202E-02,-2.14075E-01, 0.00000E+00,-1.08018E-01,-3.73981E-01,$
        0.00000E+00, 3.10022E-02,-1.16305E-03,-2.07596E+01, 0.00000E+00,$
        8.64502E-02, 0.00000E+00, 9.74908E+01, 5.16707E-02, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 8.66784E-02,$
        1.58727E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 3.46193E+02, 1.34297E-02, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-3.48509E-03,$
       -1.54689E-04, 0.00000E+00, 0.00000E+00, 8.47001E-02, 1.70147E-01,$
        1.47753E-02, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
pf2 = [ 1.89320E-02, 3.68181E-05, 1.32570E-02, 0.00000E+00, 0.00000E+00,$
        3.59719E-03, 7.44328E-03,-1.00023E-03,-6.50528E+03, 0.00000E+00,$
        1.03485E-02,-1.00983E-03,-4.06916E-03,-6.60864E+01,-1.71533E-02,$
        1.10605E-02, 1.20300E-02,-5.20034E-03, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
       -2.62769E+03, 7.13755E-03, 4.17999E-03, 0.00000E+00, 1.25910E+04,$
        0.00000E+00, 0.00000E+00, 0.00000E+00,-2.23595E-03, 4.60217E-03,$
        5.71794E-03, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
       -3.18353E-02,-2.35526E-02,-1.36189E-02, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 2.03522E-02,-6.67837E+01,-1.09724E-03, 0.00000E+00]
pf3 = [-1.38821E-02, 1.60468E-02, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 1.51574E-02,$
       -5.44470E-04, 0.00000E+00, 7.28224E-02, 6.59413E-02, 0.00000E+00,$
       -5.15692E-03, 0.00000E+00, 0.00000E+00,-3.70367E+03, 0.00000E+00,$
        0.00000E+00, 1.36131E-02, 5.38153E-03, 0.00000E+00, 4.76285E+00,$
       -1.75677E-02, 2.26301E-02, 0.00000E+00, 1.76631E-02, 4.77162E-03,$
        0.00000E+00, 5.39354E+00, 0.00000E+00,-7.51710E-03, 0.00000E+00,$
        0.00000E+00,-8.82736E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
;          H DENSITY
pg1 = [ 1.26376E+00,-2.14304E-01,-1.49984E-01, 2.30404E-01, 2.98237E-02,$
        2.68673E-02, 2.96228E-01, 2.21900E-02,-2.07655E-02, 4.52506E-01,$
        1.20105E-01, 3.24420E-02, 4.24816E-02,-9.14313E+00, 0.00000E+00,$
        2.47178E-02,-2.88229E-02, 8.12805E+01, 5.10380E-02,-5.80611E-03,$
        2.51236E-05,-1.24083E-02, 0.00000E+00, 0.00000E+00, 8.66784E-02,$
        1.58727E-01,-3.48190E-02, 0.00000E+00, 0.00000E+00, 2.89885E-05,$
        0.00000E+00, 1.53595E+02,-1.68604E-02, 0.00000E+00, 1.01015E-02,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 2.84552E-04,$
       -1.22181E-03, 0.00000E+00, 0.00000E+00, 8.47001E-02, 1.70147E-01,$
       -1.04927E-02, 0.00000E+00, 0.00000E+00, 0.00000E+00,-5.91313E-03]
pg2 = [-2.30501E-02, 3.14758E-05, 0.00000E+00, 0.00000E+00, 1.26956E-02,$
        8.35489E-03, 3.10513E-04, 0.00000E+00, 3.42119E+03,-2.45017E-03,$
       -4.27154E-04, 5.45152E-04, 1.89896E-03, 2.89121E+01,-6.49973E-03,$
       -1.93855E-02,-1.48492E-02, 0.00000E+00,-5.10576E-02, 7.87306E-02,$
        9.51981E-02,-1.49422E+04, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        2.65503E+02, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 6.37110E-03, 3.24789E-04,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        6.14274E-02, 1.00376E-02,-8.41083E-04, 0.00000E+00, 0.00000E+00,$
        0.00000E+00,-1.27099E-02, 0.00000E+00, 0.00000E+00, 0.00000E+00]
pg3 = [-3.94077E-03,-1.28601E-02,-7.97616E-03, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00,-6.71465E-03,-1.69799E-03, 1.93772E-03, 3.81140E+00,$
       -7.79290E-03,-1.82589E-02,-1.25860E-02,-1.04311E-02,-3.02465E-03,$
        2.43063E-03, 3.63237E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
;          N DENSITY
ph1 = [ 7.09557E+01,-3.26740E-01, 0.00000E+00,-5.16829E-01,-1.71664E-03,$
        9.09310E-02,-6.71500E-01,-1.47771E-01,-9.27471E-02,-2.30862E-01,$
       -1.56410E-01, 1.34455E-02,-1.19717E-01, 2.52151E+00, 0.00000E+00,$
       -2.41582E-01, 5.92939E-02, 4.39756E+00, 9.15280E-02, 4.41292E-03,$
        0.00000E+00, 8.66807E-03, 0.00000E+00, 0.00000E+00, 8.66784E-02,$
        1.58727E-01, 9.74701E-02, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 6.70217E+01,-1.31660E-03, 0.00000E+00,-1.65317E-02,$
        0.00000E+00, 0.00000E+00, 8.50247E-02, 2.77428E+01, 4.98658E-03,$
        6.15115E-03, 9.50156E-03,-2.12723E-02, 8.47001E-02, 1.70147E-01,$
       -2.38645E-02, 0.00000E+00, 0.00000E+00, 0.00000E+00, 1.37380E-03]
ph2 = [-8.41918E-03, 2.80145E-05, 7.12383E-03, 0.00000E+00,-1.66209E-02,$
        1.03533E-04,-1.68898E-02, 0.00000E+00, 3.64526E+03, 0.00000E+00,$
        6.54077E-03, 3.69130E-04, 9.94419E-04, 8.42803E+01,-1.16124E-02,$
       -7.74414E-03,-1.68844E-03, 1.42809E-03,-1.92955E-03, 1.17225E-01,$
       -2.41512E-02, 1.50521E+04, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        1.60261E+03, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00,-3.54403E-04,-1.87270E-02,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        2.76439E-02, 6.43207E-03,-3.54300E-02, 0.00000E+00, 0.00000E+00,$
        0.00000E+00,-2.80221E-02, 8.11228E+01,-6.75255E-04, 0.00000E+00]
ph3 = [-1.05162E-02,-3.48292E-03,-6.97321E-03, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00,-1.45546E-03,-1.31970E-02,-3.57751E-03,-1.09021E+00,$
       -1.50181E-02,-7.12841E-03,-6.64590E-03,-3.52610E-03,-1.87773E-02,$
       -2.22432E-03,-3.93895E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
;          HOT O DENSITY
pi1 = [ 6.04050E-02, 1.57034E+00, 2.99387E-02, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-1.51018E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00,-8.61650E+00, 1.26454E-02,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 5.50878E-03, 0.00000E+00, 0.00000E+00, 8.66784E-02,$
        1.58727E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 6.23881E-02, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 8.47001E-02, 1.70147E-01,$
       -9.45934E-02, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
pi2 = [ 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
pi3 = [ 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
;         S PARAM
pj1 = [ 9.56827E-01, 6.20637E-02, 3.18433E-02, 0.00000E+00, 0.00000E+00,$
        3.94900E-02, 0.00000E+00, 0.00000E+00,-9.24882E-03,-7.94023E-03,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 1.74712E+02, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 2.74677E-03, 0.00000E+00, 1.54951E-02, 8.66784E-02,$
        1.58727E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00,-6.99007E-04, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 1.24362E-02,-5.28756E-03, 8.47001E-02, 1.70147E-01,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
pj2 = [ 0.00000E+00, 2.47425E-05, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
pj3 = [ 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
;         TURBO
pk1 = [ 1.09930E+00, 3.90631E+00, 3.07165E+00, 9.86161E-01, 1.63536E+01,$
        4.63830E+00, 1.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 2.93318E-02, 1.18339E-01,$
        1.22732E+00, 1.02669E-01, 1.17681E+00, 2.12185E+00, 1.00000E+00,$
        1.00000E+00, 1.08607E+00, 1.34836E+00, 1.10016E+00, 7.34129E-01,$
        1.15241E+00, 2.22784E+00, 7.95907E-01, 4.03601E+00, 4.39732E+00,$
        1.23435E+02,-4.52411E-02, 1.68986E-06, 7.44294E-01, 1.03604E+00,$
        1.72783E+02, 1.17681E+00, 2.12185E+00,-7.83697E-01, 9.49154E-01]
;         LOWER BOUNDARY
ptm = [ 1.04130E+03, 3.86000E+02, 1.95000E+02, 1.66728E+01, 2.13000E+02,$
        1.20000E+02, 2.40000E+02, 1.87000E+02,-2.00000E+00, 0.00000E+00]
pdm = [[ 2.45600E+07, 6.71072E-06, 1.00000E+02, 0.00000E+00, 1.10000E+02,$
         1.00000E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00],$
       [ 8.59400E+10, 1.00000E+00, 1.05000E+02,-8.00000E+00, 1.10000E+02,$
         1.00000E+01, 9.00000E+01, 2.00000E+00, 0.00000E+00, 0.00000E+00],$
       [ 2.81000E+11, 0.00000E+00, 1.05000E+02, 2.80000E+01, 2.89500E+01,$
         0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00],$
       [ 3.30000E+10, 2.68270E-01, 1.05000E+02, 1.00000E+00, 1.10000E+02,$
         1.00000E+01, 1.10000E+02,-1.00000E+01, 0.00000E+00, 0.00000E+00],$
       [ 1.33000E+09, 1.19615E-02, 1.05000E+02, 0.00000E+00, 1.10000E+02,$
         1.00000E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00],$
       [ 1.76100E+05, 1.00000E+00, 9.50000E+01,-8.00000E+00, 1.10000E+02,$
         1.00000E+01, 9.00000E+01, 2.00000E+00, 0.00000E+00, 0.00000E+00],$
       [ 1.00000E+07, 1.00000E+00, 1.05000E+02,-8.00000E+00, 1.10000E+02,$
         1.00000E+01, 9.00000E+01, 2.00000E+00, 0.00000E+00, 0.00000E+00],$
       [ 1.00000E+06, 1.00000E+00, 1.05000E+02,-8.00000E+00, 5.50000E+02,$
         7.60000E+01, 9.00000E+01, 2.00000E+00, 0.00000E+00, 4.00000E+03]]
;          TN1(2)
pl1 = [ 1.00858E+00, 4.56011E-02,-2.22972E-02,-5.44388E-02, 5.23136E-04,$
       -1.88849E-02, 5.23707E-02,-9.43646E-03, 6.31707E-03,-7.80460E-02,$
       -4.88430E-02, 0.00000E+00, 0.00000E+00,-7.60250E+00, 0.00000E+00,$
       -1.44635E-02,-1.76843E-02,-1.21517E+02, 2.85647E-02, 0.00000E+00,$
        0.00000E+00, 6.31792E-04, 0.00000E+00, 5.77197E-03, 8.66784E-02,$
        1.58727E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00,-8.90272E+03, 3.30611E-03, 3.02172E-03, 0.00000E+00,$
       -2.13673E-03,-3.20910E-04, 0.00000E+00, 0.00000E+00, 2.76034E-03,$
        2.82487E-03,-2.97592E-04,-4.21534E-03, 8.47001E-02, 1.70147E-01,$
        8.96456E-03, 0.00000E+00,-1.08596E-02, 0.00000E+00, 0.00000E+00]
pl2 = [ 5.57917E-03, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 9.65405E-03, 0.00000E+00, 0.00000E+00, 2.00000E+00]
;          TN1(3)
pm1 = [ 9.39664E-01, 8.56514E-02,-6.79989E-03, 2.65929E-02,-4.74283E-03,$
        1.21855E-02,-2.14905E-02, 6.49651E-03,-2.05477E-02,-4.24952E-02,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 1.19148E+01, 0.00000E+00,$
        1.18777E-02,-7.28230E-02,-8.15965E+01, 1.73887E-02, 0.00000E+00,$
        0.00000E+00, 0.00000E+00,-1.44691E-02, 2.80259E-04, 8.66784E-02,$
        1.58727E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 2.16584E+02, 3.18713E-03, 7.37479E-03, 0.00000E+00,$
       -2.55018E-03,-3.92806E-03, 0.00000E+00, 0.00000E+00,-2.89757E-03,$
       -1.33549E-03, 1.02661E-03, 3.53775E-04, 8.47001E-02, 1.70147E-01,$
       -9.17497E-03, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
pm2 = [ 3.56082E-03, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00,-1.00902E-02, 0.00000E+00, 0.00000E+00, 2.00000E+00]
;          TN1(4)
pn1 = [ 9.85982E-01,-4.55435E-02, 1.21106E-02, 2.04127E-02,-2.40836E-03,$
        1.11383E-02,-4.51926E-02, 1.35074E-02,-6.54139E-03, 1.15275E-01,$
        1.28247E-01, 0.00000E+00, 0.00000E+00,-5.30705E+00, 0.00000E+00,$
       -3.79332E-02,-6.24741E-02, 7.71062E-01, 2.96315E-02, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 6.81051E-03,-4.34767E-03, 8.66784E-02,$
        1.58727E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 1.07003E+01,-2.76907E-03, 4.32474E-04, 0.00000E+00,$
        1.31497E-03,-6.47517E-04, 0.00000E+00,-2.20621E+01,-1.10804E-03,$
       -8.09338E-04, 4.18184E-04, 4.29650E-03, 8.47001E-02, 1.70147E-01,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
pn2 = [-4.04337E-03, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-9.52550E-04,$
        8.56253E-04, 4.33114E-04, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 1.21223E-03,$
        2.38694E-04, 9.15245E-04, 1.28385E-03, 8.67668E-04,-5.61425E-06,$
        1.04445E+00, 3.41112E+01, 0.00000E+00,-8.40704E-01,-2.39639E+02,$
        7.06668E-01,-2.05873E+01,-3.63696E-01, 2.39245E+01, 0.00000E+00,$
       -1.06657E-03,-7.67292E-04, 1.54534E-04, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 2.00000E+00]
;          TN1(5) TN2(1)
po1 = [ 1.00320E+00, 3.83501E-02,-2.38983E-03, 2.83950E-03, 4.20956E-03,$
        5.86619E-04, 2.19054E-02,-1.00946E-02,-3.50259E-03, 4.17392E-02,$
       -8.44404E-03, 0.00000E+00, 0.00000E+00, 4.96949E+00, 0.00000E+00,$
       -7.06478E-03,-1.46494E-02, 3.13258E+01,-1.86493E-03, 0.00000E+00,$
       -1.67499E-02, 0.00000E+00, 0.00000E+00, 5.12686E-04, 8.66784E-02,$
        1.58727E-01,-4.64167E-03, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        4.37353E-03,-1.99069E+02, 0.00000E+00,-5.34884E-03, 0.00000E+00,$
        1.62458E-03, 2.93016E-03, 2.67926E-03, 5.90449E+02, 0.00000E+00,$
        0.00000E+00,-1.17266E-03,-3.58890E-04, 8.47001E-02, 1.70147E-01,$
        0.00000E+00, 0.00000E+00, 1.38673E-02, 0.00000E+00, 0.00000E+00]
po2 = [ 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 1.60571E-03,$
        6.28078E-04, 5.05469E-05, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-1.57829E-03,$
       -4.00855E-04, 5.04077E-05,-1.39001E-03,-2.33406E-03,-4.81197E-04,$
        1.46758E+00, 6.20332E+00, 0.00000E+00, 3.66476E-01,-6.19760E+01,$
        3.09198E-01,-1.98999E+01, 0.00000E+00,-3.29933E+02, 0.00000E+00,$
       -1.10080E-03,-9.39310E-05, 1.39638E-04, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 2.00000E+00]
;          TN2(2)
pp1 = [ 9.81637E-01,-1.41317E-03, 3.87323E-02, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-3.58707E-02,$
       -8.63658E-03, 0.00000E+00, 0.00000E+00,-2.02226E+00, 0.00000E+00,$
       -8.69424E-03,-1.91397E-02, 8.76779E+01, 4.52188E-03, 0.00000E+00,$
        2.23760E-02, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00,-7.07572E-03, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
       -4.11210E-03, 3.50060E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00,-8.36657E-03, 1.61347E+01, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00,-1.45130E-02, 0.00000E+00, 0.00000E+00]
pp2 = [ 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 1.24152E-03,$
        6.43365E-04, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 1.33255E-03,$
        2.42657E-03, 1.60666E-03,-1.85728E-03,-1.46874E-03,-4.79163E-06,$
        1.22464E+00, 3.53510E+01, 0.00000E+00, 4.49223E-01,-4.77466E+01,$
        4.70681E-01, 8.41861E+00,-2.88198E-01, 1.67854E+02, 0.00000E+00,$
        7.11493E-04, 6.05601E-04, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 2.00000E+00]
;          TN2(3)
pq1 = [ 1.00422E+00,-7.11212E-03, 5.24480E-03, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-5.28914E-02,$
       -2.41301E-02, 0.00000E+00, 0.00000E+00,-2.12219E+01,-1.03830E-02,$
       -3.28077E-03, 1.65727E-02, 1.68564E+00,-6.68154E-03, 0.00000E+00,$
        1.45155E-02, 0.00000E+00, 8.42365E-03, 0.00000E+00, 0.00000E+00,$
        0.00000E+00,-4.34645E-03, 0.00000E+00, 0.00000E+00, 2.16780E-02,$
        0.00000E+00,-1.38459E+02, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 7.04573E-03,-4.73204E+01, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 1.08767E-02, 0.00000E+00, 0.00000E+00]
pq2 = [ 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-8.08279E-03,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 5.21769E-04,$
       -2.27387E-04, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 3.26769E-03,$
        3.16901E-03, 4.60316E-04,-1.01431E-04, 1.02131E-03, 9.96601E-04,$
        1.25707E+00, 2.50114E+01, 0.00000E+00, 4.24472E-01,-2.77655E+01,$
        3.44625E-01, 2.75412E+01, 0.00000E+00, 7.94251E+02, 0.00000E+00,$
        2.45835E-03, 1.38871E-03, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 2.00000E+00]
;          TN2(4) TN3(1)
pr1 = [ 1.01890E+00,-2.46603E-02, 1.00078E-02, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-6.70977E-02,$
       -4.02286E-02, 0.00000E+00, 0.00000E+00,-2.29466E+01,-7.47019E-03,$
        2.26580E-03, 2.63931E-02, 3.72625E+01,-6.39041E-03, 0.00000E+00,$
        9.58383E-03, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00,-1.85291E-03, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 1.39717E+02, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 9.19771E-03,-3.69121E+02, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00,-1.57067E-02, 0.00000E+00, 0.00000E+00]
pr2 = [ 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-7.07265E-03,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-2.92953E-03,$
       -2.77739E-03,-4.40092E-04, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 2.47280E-03,$
        2.95035E-04,-1.81246E-03, 2.81945E-03, 4.27296E-03, 9.78863E-04,$
        1.40545E+00,-6.19173E+00, 0.00000E+00, 0.00000E+00,-7.93632E+01,$
        4.44643E-01,-4.03085E+02, 0.00000E+00, 1.15603E+01, 0.00000E+00,$
        2.25068E-03, 8.48557E-04,-2.98493E-04, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 2.00000E+00]
;          TN3(2)
ps1 = [ 9.75801E-01, 3.80680E-02,-3.05198E-02, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 3.85575E-02,$
        5.04057E-02, 0.00000E+00, 0.00000E+00,-1.76046E+02, 1.44594E-02,$
       -1.48297E-03,-3.68560E-03, 3.02185E+01,-3.23338E-03, 0.00000E+00,$
        1.53569E-02, 0.00000E+00,-1.15558E-02, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 4.89620E-03, 0.00000E+00, 0.00000E+00,-1.00616E-02,$
       -8.21324E-03,-1.57757E+02, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 6.63564E-03, 4.58410E+01, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00,-2.51280E-02, 0.00000E+00, 0.00000E+00]
ps2 = [ 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 9.91215E-03,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-8.73148E-04,$
       -1.29648E-03,-7.32026E-05, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-4.68110E-03,$
       -4.66003E-03,-1.31567E-03,-7.39390E-04, 6.32499E-04,-4.65588E-04,$
       -1.29785E+00,-1.57139E+02, 0.00000E+00, 2.58350E-01,-3.69453E+01,$
        4.10672E-01, 9.78196E+00,-1.52064E-01,-3.85084E+03, 0.00000E+00,$
       -8.52706E-04,-1.40945E-03,-7.26786E-04, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 2.00000E+00]
;          TN3(3)
pu1 = [ 9.60722E-01, 7.03757E-02,-3.00266E-02, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 2.22671E-02,$
        4.10423E-02, 0.00000E+00, 0.00000E+00,-1.63070E+02, 1.06073E-02,$
        5.40747E-04, 7.79481E-03, 1.44908E+02, 1.51484E-04, 0.00000E+00,$
        1.97547E-02, 0.00000E+00,-1.41844E-02, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 5.77884E-03, 0.00000E+00, 0.00000E+00, 9.74319E-03,$
        0.00000E+00,-2.88015E+03, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00,-4.44902E-03,-2.92760E+01, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 2.34419E-02, 0.00000E+00, 0.00000E+00]
pu2 = [ 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 5.36685E-03,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-4.65325E-04,$
       -5.50628E-04, 3.31465E-04, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-2.06179E-03,$
       -3.08575E-03,-7.93589E-04,-1.08629E-04, 5.95511E-04,-9.05050E-04,$
        1.18997E+00, 4.15924E+01, 0.00000E+00,-4.72064E-01,-9.47150E+02,$
        3.98723E-01, 1.98304E+01, 0.00000E+00, 3.73219E+03, 0.00000E+00,$
       -1.50040E-03,-1.14933E-03,-1.56769E-04, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 2.00000E+00]
;          TN3(4)
pv1 = [ 1.03123E+00,-7.05124E-02, 8.71615E-03, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-3.82621E-02,$
       -9.80975E-03, 0.00000E+00, 0.00000E+00, 2.89286E+01, 9.57341E-03,$
        0.00000E+00, 0.00000E+00, 8.66153E+01, 7.91938E-04, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 4.68917E-03, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 7.86638E-03, 0.00000E+00, 0.00000E+00, 9.90827E-03,$
        0.00000E+00, 6.55573E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00,-4.00200E+01, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 7.07457E-03, 0.00000E+00, 0.00000E+00]
pv2 = [ 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 5.72268E-03,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-2.04970E-04,$
        1.21560E-03,-8.05579E-06, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-2.49941E-03,$
       -4.57256E-04,-1.59311E-04, 2.96481E-04,-1.77318E-03,-6.37918E-04,$
        1.02395E+00, 1.28172E+01, 0.00000E+00, 1.49903E-01,-2.63818E+01,$
        0.00000E+00, 4.70628E+01,-2.22139E-01, 4.82292E-02, 0.00000E+00,$
       -8.67075E-04,-5.86479E-04, 5.32462E-04, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 2.00000E+00]
;          TN3(5) SURFACE TEMP TSL
pw1 = [ 1.00828E+00,-9.10404E-02,-2.26549E-02, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-2.32420E-02,$
       -9.08925E-03, 0.00000E+00, 0.00000E+00, 3.36105E+01, 0.00000E+00,$
        0.00000E+00, 0.00000E+00,-1.24957E+01,-5.87939E-03, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 2.79765E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 2.01237E+03, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00,-1.75553E-02, 0.00000E+00, 0.00000E+00]
pw2 = [ 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 3.29699E-03,$
        1.26659E-03, 2.68402E-04, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 1.17894E-03,$
        1.48746E-03, 1.06478E-04, 1.34743E-04,-2.20939E-03,-6.23523E-04,$
        6.36539E-01, 1.13621E+01, 0.00000E+00,-3.93777E-01, 2.38687E+03,$
        0.00000E+00, 6.61865E+02,-1.21434E-01, 9.27608E+00, 0.00000E+00,$
        1.68478E-04, 1.24892E-03, 1.71345E-03, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 2.00000E+00]
;          TGN3(2) SURFACE GRAD TSLG
px1 = [ 1.57293E+00,-6.78400E-01, 6.47500E-01, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-7.62974E-02,$
       -3.60423E-01, 0.00000E+00, 0.00000E+00, 1.28358E+02, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 4.68038E+01, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00,-1.67898E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 2.90994E+04, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 3.15706E+01, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
px2 = [ 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 2.00000E+00]
;          TGN2(1) TGN1(2)
py1 = [ 8.60028E-01, 3.77052E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-1.17570E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 7.77757E-03, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 1.01024E+02, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 6.54251E+02, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
py2 = [ 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-1.56959E-02,$
        1.91001E-02, 3.15971E-02, 1.00982E-02,-6.71565E-03, 2.57693E-03,$
        1.38692E+00, 2.82132E-01, 0.00000E+00, 0.00000E+00, 3.81511E+02,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 2.00000E+00]
;          TGN3(1) TGN2(2)
pz1 = [ 1.06029E+00,-5.25231E-02, 3.73034E-01, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 3.31072E-02,$
       -3.88409E-01, 0.00000E+00, 0.00000E+00,-1.65295E+02,-2.13801E-01,$
       -4.38916E-02,-3.22716E-01,-8.82393E+01, 1.18458E-01, 0.00000E+00,$
       -4.35863E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00,-1.19782E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 2.62229E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00,-5.37443E+01, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00,-4.55788E-01, 0.00000E+00, 0.00000E+00]
pz2 = [ 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 3.84009E-02,$
        3.96733E-02, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 5.05494E-02,$
        7.39617E-02, 1.92200E-02,-8.46151E-03,-1.34244E-02, 1.96338E-02,$
        1.50421E+00, 1.88368E+01, 0.00000E+00, 0.00000E+00,-5.13114E+01,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        5.11923E-02, 3.61225E-02, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 2.00000E+00]
;          SEMIANNUAL MULT SAM
paa1 = [ 9.56827E-01, 6.20637E-02, 3.18433E-02, 0.00000E+00, 0.00000E+00,$
        3.94900E-02, 0.00000E+00, 0.00000E+00,-9.24882E-03,-7.94023E-03,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 1.74712E+02, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 2.74677E-03, 0.00000E+00, 1.54951E-02, 8.66784E-02,$
        1.58727E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00,-6.99007E-04, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 1.24362E-02,-5.28756E-03, 8.47001E-02, 1.70147E-01,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
paa2 =[ 0.00000E+00, 2.47425E-05, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,$
        0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
;         MIDDLE ATMOSPHERE AVERAGES
pavgm=[ 2.61000E+02, 2.64000E+02, 2.29000E+02, 2.17000E+02, 2.17000E+02,$
        2.23000E+02, 2.86760E+02,-2.93940E+00, 2.50000E+00, 0.00000E+00]
pt = [pt1,pt2,pt3]
pd = [[pa1,pa2,pa3],[pb1,pb2,pb3],[pc1,pc2,pc3],[pd1,pd2,pd3],$
      [pe1,pe2,pe3],[pf1,pf2,pf3],[pg1,pg2,pg3],[ph1,ph2,ph3],[pi1,pi2,pi3]]
ps = [pj1,pj2,pj3]
pdl = reform(pk1,25,2)
ptl = [[pl1,pl2],[pm1,pm2],[pn1,pn2],[po1,po2]]
pma = [[pp1,pp2],[pq1,pq2],[pr1,pr2],[ps1,ps2],[pu1,pu2],$
       [pv1,pv2],[pw1,pw2],[px1,px2],[py1,py2],[pz1,pz2]]
sam = [paa1,paa2]
PARMFL = 1
return
END
;-----------------------------------------------------------------------
pro nrspline_msis,X,Y,yp=yp
;        CALCULATE 2ND DERIVATIVES OF CUBIC SPLINE INTERP FUNCTION
;        ADAPTED FROM NUMERICAL RECIPES BY PRESS ET AL
;        X,Y: ARRAYS OF TABULATED FUNCTION IN ASCENDING ORDER BY X
;        N: SIZE OF ARRAYS X,Y
;        YP1,YPN: SPECIFIED DERIVATIVES AT X(1) AND X(N); VALUES
;                 >= 1E30 SIGNAL SIGNAL SECOND DERIVATIVE ZERO
;        Y2: OUTPUT ARRAY OF SECOND DERIVATIVES
      common nrspline_msis_data,xa,ya,y2a
      n = n_elements(x)
      xa = x
      ya = y
     y2a = fltarr(n)
      u = fltarr(n)
     if not keyword_set(yp) then yp = [1e30,1e30]
      if (yp(0) ge 1e30) then begin
        Y2a(0)=0.
        U(0)=0.
      endif ELSE begin
        Y2a(0)=-.5
        U(0)=(3./(X(1)-X(0)))*((Y(1)-Y(0))/(X(1)-X(0))-YP(0))
      ENdelse
      for I=1,N-2 do begin
          SIG=(X(I)-X(I-1))/(X(I+1)-X(I-1))
          P=SIG*Y2a(I-1)+2.
          Y2a(I)=(SIG-1.)/P
          U(I)=(6.*((Y(I+1)-Y(I))/(X(I+1)-X(I))-(Y(I)-Y(I-1))/(X(I)-X(I-1)))/(X(I+1)-X(I-1))-SIG*U(I-1))/P
      endfor
      IF (yp(1) ge 1e30) THEN begin
        QN=0
        UN=0
      endif ELSE begin
        QN=.5
        UN=(3./(X(N-1)-X(N-2)))*(YP(1)-(Y(N-1)-Y(N-2))/(X(N-1)-X(N-2)))
      ENDelse
      Y2a(N-1)=(UN-QN*U(N-2))/(QN*Y2a(N-2)+1.)
      for K=N-2,0,-1 do $
        Y2a(K)=Y2a(K)*Y2a(K+1)+U(K)
      RETURN
      END
;-----------------------------------------------------------------------
      function nrsplint_msis,X
;        CALCULATE CUBIC SPLINE INTERP VALUE
;        ADAPTED FROM NUMERICAL RECIPES BY PRESS ET AL.
;        XA,YA: ARRAYS OF TABULATED FUNCTION IN ASCENDING ORDER BY X
;        Y2A: ARRAY OF SECOND DERIVATIVES
;        N: SIZE OF ARRAYS XA,YA,Y2A
;        X: ABSCISSA FOR INTERPOLATION
;        Y: OUTPUT VALUE
      common nrspline_msis_data,xa,ya,y2a
      n = n_elements(xa)
      KLO=0
      KHI=N-1
      ;binary search
      while (KHI-KLO GT 1) do begin
          K=(KHI+KLO)/2
          IF (XA(K) GT X) THEN KHI=K ELSE KLO=K
      ENDwhile
      H=XA(KHI)-XA(KLO)
      IF (H EQ 0) then message,'BAD XA INPUT TO SPLINT'
      A=(XA(KHI)-X)/H
      B=(X-XA(KLO))/H
      Y=A*YA(KLO)+B*YA(KHI)+ $
       ((A*A*A-A)*Y2A(KLO)+(B*B*B-B)*Y2A(KHI))*H*H/6.
      RETURN,y
      END
;-----------------------------------------------------------------------
function nrsplini_msis,X
;       INTEGRATE CUBIC SPLINE FUNCTION FROM XA(1) TO X
;        XA,YA: ARRAYS OF TABULATED FUNCTION IN ASCENDING ORDER BY X
;        Y2A: ARRAY OF SECOND DERIVATIVES
;        N: SIZE OF ARRAYS XA,YA,Y2A
;        X: ABSCISSA ENDPOINT FOR INTEGRATION (may be array)
;        Y: OUTPUT VALUE
    common nrspline_msis_data,xa,ya,y2a
    n = n_elements(xa)
;
; compute integrals over full bins
    h = xa(1:*)-xa(0:*)
    h2 = h*h
    yall =  ( 0.5*(ya(0:*) +ya(1:*) ) $
             -.25*(y2a(0:*)+y2a(1:*))*h2/6.)*h
;
; compute where full-bin integrals may be used
    khi = intarr(n)
    mask = intarr(n_elements(x),n)
    for i=0,n-1 do $
        mask(*,i) = (xa(i) lt x)
    khi = total(mask,2)
    klo = (khi-1)>0
    khi = klo+1
;
; compute integrals over final fractional bin
    H=XA(KHI)-XA(KLO)
    A=(XA(KHI)-X)/H
    B=(X-XA(KLO))/H
    A2=A*A
    B2=B*B
    YPART=((1.-A2)*YA(KLO)/2.+B2*YA(KHI)/2.+ $
          ((-(1.+A2*A2)/4.+A2/2.)*Y2A(KLO)+$
          (B2*B2/4.-B2/2.)*Y2A(KHI))*H*H/6.)*H
;
; compute the total integral for full and partial bins
    return,mask(*,1:*)#yall+ypart
    END
;--------------------------------------------------------------------
FUNCTION DENSU,ALT,DLB,TINF,TLB,XM,ALPHA,TZ,ZLB,S2,MN1,ZN1,TN1,TGN1
;       Calculate Temperature and Density Profiles for MSIS models
;       New lower thermo polynomial 10/30/89
      COMMON PARMB,GSURF,RE

      RGAS=831.4
      out=1.
;        Joining altitude of Bates and spline
      ZA=ZN1(0)
      Z=MAX([ALT,ZA])
;      Geopotential altitude difference from ZLB
      ZG2=ZETA(Z,ZLB)
;      Bates temperature
      TT=TINF-(TINF-TLB)*EXP(-S2*ZG2)
      TA=TT
      TZ=TT
      out=TZ
      IF (ALT lt ZA) then begin
;
;       CALCULATE TEMPERATURE BELOW ZA
;      Temperature gradient at ZA from Bates profile
          DTA=(TINF-TA)*S2*((RE+ZLB)/(RE+ZA))^2
          TGN1(0)=DTA
          TN1(0)=TA
          Z=max([ALT,ZN1(MN1-1)])
          MN=MN1
          Z1=ZN1(0)
          Z2=ZN1(MN-1)
          T1=TN1(0)
          T2=TN1(MN-1)
;      Geopotental difference from Z1
          ZG=ZETA(Z,Z1)
          ZGDIF=ZETA(Z2,Z1)
;       Set up spline nodes
          xs = zeta(zn1,z1)/zgdif
          ys = 1./tn1
;        End node derivatives
          YD1=-TGN1(0)/(T1*T1)*ZGDIF
          YD2=-TGN1(1)/(T2*T2)*ZGDIF*((RE+Z2)/(RE+Z1))^2
;       Calculate spline coefficients (stored in common block)
          nrspline_msis,XS,YS,yp=[YD1,YD2]
          X=ZG/ZGDIF
          y = (nrsplint_msis(X))(0)
;       temperature at altitude
          TZ=1./Y
          out = tz
      endif
      if (XM eq 0.) then return,out
;
;      CALCULATE DENSITY ABOVE ZA
      GLB=GSURF/(1.+ZLB/RE)^2
      GAMMA=XM*GLB/(S2*RGAS*TINF)
      EXPL=EXP(-S2*GAMMA*ZG2)
      IF(EXPL GT 50 OR TT LE 0.) THEN EXPL=50.
;       Density at altitude
      DENSA=DLB*(TLB/TT)^(1.+ALPHA+GAMMA)*EXPL
      out = densa
      IF(ALT GE ZA) then return,out
;
;      CALCULATE DENSITY BELOW ZA
      GLB=GSURF/(1.+Z1/RE)^2
      GAMM=XM*GLB*ZGDIF/RGAS
;       integrate spline temperatures
      YI = (nrsplini_msis(x))(0)
      EXPL=GAMM*YI
      IF (EXPL GT 50. OR TZ LE 0.) THEN expl = 50.
;       Density at altitude
      out = out*(T1/TZ)^(1.+ALPHA)*EXP(-EXPL)
      return,out
      END
;-----------------------------------------------------------------------
      FUNCTION DNET,DD,DM,ZHM,XMM,XM
;       TURBOPAUSE CORRECTION FOR MSIS MODELS
;         Root mean density
;       8/20/80
;          DD - diffusive density
;          DM - full mixed density
;          ZHM - transition scale length
;          XMM - full mixed molecular weight
;          XM  - species molecular weight
;          DNET - combined density
      A=ZHM/(XMM-XM)
      IF (DM LE 0. or DD LE 0.) then begin
          message,string(dm,dd,xm,"$('DNET LOG ERROR',3e13.5)"),/info
          IF (DD EQ.0 AND DM EQ 0) then DD=1.
          IF (DM EQ 0) then return,DD
          IF (DD EQ 0) then return,dm
      endif
      YLOG=A*ALOG(DM/DD)
      IF (YLOG LT -10.) then return,dd
      IF (YLOG GT 10.)  then return,dm
      return,DD*(1.+EXP(YLOG))^(1/A)
      END
;--------------------------------------------------------------------
      FUNCTION  CCOR,ALT, R,H1,ZH
;        CHEMISTRY/DISSOCIATION CORRECTION FOR MSIS MODELS
;     Eq. A20a or Eq. A21
      E=(ALT-ZH)/H1
      IF (E GT 70.) then $
          CCOR = 0. $
      else IF (E LT -70.) then $
          CCOR = R $
      else begin
          EX=EXP(E)
          CCOR=R/(1.+EX)
      endelse
      RETURN,exp(CCOR)
      END
;-----------------------------------------------------------------------
      FUNCTION SCALH,ALT,XM,TEMP
;      Calculate scale height (km)
      COMMON PARMB,GSURF,RE
      RGAS = 831.4
      G=GSURF/(1.+ALT/RE)^2
      return,RGAS*TEMP/(G*XM)
      END
;--------------------------------------------------------------------
; Handy function
;
function SUMEX,EX
;       Eq. A24c
return,1.+(1.-EX^19)/(1.-EX)*EX^(.5)
end
;--------------------------------------------------------------------
; Handy function
;
function g0,a,p
;      Eq. A24d
return,(A-4.+(P(25)-1.)*(A-4.+(EXP(-ABS(P(24))*(A-4.))-1.)/ABS(P(24))))
end
;--------------------------------------------------------------------
; Handy function
;
function g2,a,p
;      Eq. A24d
return,(A-4.+(P(94)-1.)*(A-4.+(EXP(-ABS(P(93))*(A-4.))-1.)/ABS(P(93))))
end
;--------------------------------------------------------------------
; Handy function
;
function SG0,ex,ap,p
;       Eq. A24a
return,(G0(AP(1),p)      +(G0(AP(2),p)*EX   +G0(AP(3),p)*EX*EX+   $
        G0(AP(4),p)*EX^3+(G0(AP(5),p)*EX^4+G0(AP(6),p)*EX^12 ) $
       *(1.-EX^8)/(1.-EX)))/SUMEX(EX)
end
;--------------------------------------------------------------------
FUNCTION GLOBE7,YRD,SEC,LAT,LON,TLOC,F107A,F107,AP,P
;       CALCULATE G(L) FUNCTION FOR MSIS-86/CIRA 1986
;       Upper Thermosphere Parameters
      COMMON TTEST,TINF,GB,ROUT,T
      COMMON csw,sw,isw,swc
      COMMON LPOLY,PLG,CTLOC,STLOC,C2TLOC,S2TLOC,C3TLOC,S3TLOC,$
                   IYR,DAY,DF,DFA,APD,APDF,APT,xlong
      COMMON LPOLY2,DGTR,DR,XL,TLL,sw9,DAYL,P14,P18,P32,HR,SR,SV,NSW,P39,$
                    cd14,c2d14,cd18,cd32,cd39
;
; On first time through the routine, initialize parameters
;
      if n_elements(xl) eq 0 then begin
          DGTR = 1.74533E-2
          DR   = 1.72142E-2
          XL   = 1000.
          TLL  = 1000.
          SW9  = 1.
          DAYL = -1.
          P14  = -1000.
          P18  = -1000.
          P32  = -1000.
          P39  = -1000.
          HR   = .2618
          SR   = 7.2722E-5
          SV   = replicate(1.,25)
          NSW  = 14
          PLG = fltarr(9,4)
          APT = fltarr(4)
      endif
;
; If switches not set, default to the full set of terms
; and cross-terms.  Since this is the default, don't call
; TSELEC and set the 'modified switches' flag
;
      IF (ISW NE 64999) then begin
          tselec,sv
      endif
      if sw(8) gt 0 then sw9 = 1.
      if sw(8) lt 0 then sw9 = -1.
;
; If T has not been defined yet, generate the array
;
      if n_elements(T) eq 0 then $
          T = fltarr(NSW) $
      else begin
          T(*) = 0.
      endelse
      IYR = fix(YRD/1000.)
      DAY = YRD mod 1000.
      xlong=lon
;      Eq. A22 (remainder of code)
      IF (XL ne LAT) then begin
;          CALCULATE LEGENDRE POLYNOMIALS
          C = SIN(LAT*DGTR)
          S = COS(LAT*DGTR)
          C2 = C*C
          C4 = C2*C2
          S2 = S*S
          PLG(1,0) = C
          PLG(2,0) = 0.5*(3.*C2 -1.)
          PLG(3,0) = 0.5*(5.*C*C2-3.*C)
          PLG(4,0) = (35.*C4 - 30.*C2 + 3.)/8.
          PLG(5,0) = (63.*C2*C2*C - 70.*C2*C + 15.*C)/8.
          PLG(6,0) = (11.*C*PLG(5,0) - 5.*PLG(4,0))/6.
          PLG(1,1) = S
          PLG(2,1) = 3.*C*S
          PLG(3,1) = 1.5*(5.*C2-1.)*S
          PLG(4,1) = 2.5*(7.*C2*C-3.*C)*S
          PLG(5,1) = 1.875*(21.*C4 - 14.*C2 +1.)*S
          PLG(6,1) = (11.*C*PLG(5,1)-6.*PLG(4,1))/5.
          PLG(2,2) = 3.*S2
          PLG(3,2) = 15.*S2*C
          PLG(4,2) = 7.5*(7.*C2 -1.)*S2
          PLG(5,2) = 3.*C*PLG(4,2)-2.*PLG(3,2)
          PLG(6,2)=(11.*C*PLG(5,2)-7.*PLG(4,2))/4.
          PLG(7,2)=(13.*C*PLG(6,2)-8.*PLG(5,2))/5.
          PLG(3,3) = 15.*S2*S
          PLG(4,3) = 105.*S2*S*C
          PLG(5,3)=(9.*C*PLG(4,3)-7.*PLG(3,3))/2.
          PLG(6,3)=(11.*C*PLG(5,3)-8.*PLG(4,3))/3.
          XL=LAT
      endif
      IF (TLL ne TLOC) then begin
          if not (sw(6) eq 0 and sw(7) eq 0 and sw(13) eq 0) then begin
              STLOC = SIN(HR*TLOC)
              CTLOC = COS(HR*TLOC)
              S2TLOC = SIN(2.*HR*TLOC)
              C2TLOC = COS(2.*HR*TLOC)
              S3TLOC = SIN(3.*HR*TLOC)
              C3TLOC = COS(3.*HR*TLOC)
              TLL = TLOC
          endif
      endif
      IF (DAY NE DAYL OR P(13) NE P14) then CD14=COS(DR*(DAY-P(13)))
      IF (DAY NE DAYL OR P(17) NE P18) then CD18=COS(2.*DR*(DAY-P(17)))
      IF (DAY NE DAYL OR P(31) NE P32) then CD32=COS(DR*(DAY-P(31)))
      IF (DAY NE DAYL OR P(38) NE P39) then CD39=COS(2.*DR*(DAY-P(38)))
      DAYL = DAY
      P14 = P(13)
      P18 = P(17)
      P32 = P(31)
      P39 = P(38)
;         F10.7 EFFECT
      DF = F107 - F107A
      DFA= F107A- 150.
      T(0) =  P(19)*DF*(1.+P(59)*dfa) + P(20)*DF*DF + P(21)*DFA + P(29)*DFA^2
      F1 = 1. + (P(47)*DFA +P(19)*DF+P(20)*DF*DF)*SWC(0)
      F2 = 1. + (P(49)*DFA +P(19)*DF+P(20)*DF*DF)*SWC(0)
;       TIME INDEPENDENT
      T(1) = (P(1)*PLG(2,0) + P(2)*PLG(4,0)+P(22)*PLG(6,0)) $
             +(P(14)*PLG(2,0))*DFA*SWC(0)  +P(26)*PLG(1,0)
;        SYMMETRICAL ANNUAL
      T(2) = (P(18) )*CD32
;        SYMMETRICAL SEMIANNUAL
      T(3) = (P(15)+P(16)*PLG(2,0))*CD18
;        ASYMMETRICAL ANNUAL
      T(4) =  F1*(P(9)*PLG(1,0) + P(10)*PLG(3,0))*CD14
;         ASYMMETRICAL SEMIANNUAL
      T(5) =    P(37)*PLG(1,0)*CD39
;        DIURNAL
      if (sw(6) ne 0) then begin
          T71 = (P(11)*PLG(2,1))*CD14*SWC(4)
          T72 = (P(12)*PLG(2,1))*CD14*SWC(4)
          T(6) = F2*((P(3)*PLG(1,1)+P(4)*PLG(3,1)+P(27)*PLG(5,1)+T71)*CTLOC $
                    +(P(6)*PLG(1,1)+P(7)*PLG(3,1)+P(28)*PLG(5,1)+T72)*STLOC)
      endif
;        SEMIDIURNAL
      if (sw(7) ne 0) then begin
          T81 = (P(23)*PLG(3,2)+P(35)*PLG(5,2))*CD14*SWC(4)
          T82 = (P(33)*PLG(3,2)+P(36)*PLG(5,2))*CD14*SWC(4)
          T(7) = F2*((P(5)*PLG(2,2) + P(41)*PLG(4,2) + T81)*C2TLOC  $
                +(P(8)*PLG(2,2) + P(42)*PLG(4,2) + T82)*S2TLOC)
      endif
;        TERDIURNAL
      if (sw(13) ne 0) then begin
          T(13) = F2* $
                  ((P(39)*PLG(3,3)+(P(93)*PLG(4,3)+$
                    P(46)*PLG(6,3)                 )*CD14*SWC(4))*S3TLOC $
                  +(P(40)*PLG(3,3)+(P(94)*PLG(4,3)+$
                    P(48)*PLG(6,3)                 )*CD14*SWC(4))*C3TLOC)
      endif
;          MAGNETIC ACTIVITY BASED ON DAILY AP
      IF (sw9 ne -1.) then begin
          APD=(AP(0)-4.)
          P44=P(43)
          P45=P(44)
          IF (P44 LT 0) then P44=1.E-5
          APDF = APD+(P45-1.)*(APD+(EXP(-P44  *APD)-1.)/P44  )
          if sw(8) ne 0 then begin
             T(8)=APDF*(P(32)+P(45)*PLG(2,0)+P(34)*PLG(4,0)+              $
                     (P(100)*PLG(1,0)+P(101)*PLG(3,0)+                 $
                      P(102)*PLG(5,0)    )*CD14*SWC(4)+                $
                     (P(121)*PLG(1,1)+P(122)*PLG(3,1)+                 $
                      P(123)*PLG(5,1)    )*SWC(6)*COS(HR*(TLOC-P(124))))
          endif
      endif else begin
          if (p(51) ne 0) then begin
              EXP1 = EXP(-10800.*ABS(P(51))/(1.+P(138)*(45.-ABS(LAT))))
              IF (EXP1 GT .99999) then EXP1=.99999
              if (p(24) le 1e-4) then p(24) = 1e-4
              APT(0)=SG0(EXP1)
              if (sw(8) ne 0) then $
                  T(8) = APT(0)*(P(50)+P(96)*PLG(2,0)+P(54)*PLG(4,0)+     $
                        (P(125)*PLG(1,0)+P(126)*PLG(3,0)+P(127)*PLG(5,0)) $
                        *CD14*SWC(4)+                                     $
                        (P(128)*PLG(1,1)+P(129)*PLG(3,1)+P(130)*PLG(5,1)) $
                        *SWC(6)* COS(HR*(TLOC-P(131))))
           endif
      endelse
      IF (SW(9) ne 0. and LON gt -1000.) then begin
;        LONGITUDINAL
          if (sw(10) ne 0) then $
          T(10)= (1.+P(80)*DFA*SWC(0))*       $
                 ((P(64)*PLG(2,1)+P(65)*PLG(4,1)+P(66)*PLG(6,1)   $
                 +P(103)*PLG(1,1)+P(104)*PLG(3,1)+P(105)*PLG(5,1) $
                 +SWC(4)*(P(109)*PLG(1,1)+P(110)*PLG(3,1)         $
                 +P(111)*PLG(5,1))*CD14)*COS(DGTR*LON)            $
                 +(P(90)*PLG(2,1)+P(91)*PLG(4,1)+P(92)*PLG(6,1)   $
                 +P(106)*PLG(1,1)+P(107)*PLG(3,1)+P(108)*PLG(5,1) $
                 +SWC(4)*(P(112)*PLG(1,1)+P(113)*PLG(3,1)         $
                 +P(114)*PLG(5,1))*CD14)*SIN(DGTR*lon))
;        UT AND MIXED UT,LONGITUDE
          if (sw(11) ne 0) then begin
              T(11)=(1.+P(95)*PLG(1,0))*(1.+P(81)*DFA*SWC(0))* $
                    (1.+P(119)*PLG(1,0)*SWC(4)*CD14)*          $
                    ((P(68)*PLG(1,0)+P(69)*PLG(3,0)+P(70)*PLG(5,0))* $
                    COS(SR*(SEC-P(71))))
              T(11)=T(11)+SWC(10)*  $
                    (P(76)*PLG(3,2)+P(77)*PLG(5,2)+P(78)*PLG(7,2))*  $
                    COS(SR*(SEC-P(79))+2.*DGTR*lon)*(1.+P(137)*DFA*SWC(0))
          endif
;        UT,LONGITUDE MAGNETIC ACTIVITY
          if (sw(12) ne 0) then begin
              IF (sw9 ne -1.) then begin
                  T(12)= APDF*SWC(10)*(1.+P(120)*PLG(1,0))*  $
                     ((P( 60)*PLG(2,1)+P( 61)*PLG(4,1)+P(62)*PLG(6,1))* $
                     COS(DGTR*(lon-P(63)))) $
                     +APDF*SWC(10)*SWC(4)*  $
                     (P(115)*PLG(1,1)+P(116)*PLG(3,1)+P(117)*PLG(5,1))* $
                     CD14*COS(DGTR*(lon-P(118)))$
                     + APDF*SWC(11)* $
                     (P( 83)*PLG(1,0)+P( 84)*PLG(3,0)+P( 85)*PLG(5,0))* $
                     COS(SR*(SEC-P( 75)))
              endif else begin
                  if (p(51) ne 0.) then $
                      T(12)=APT(0)*SWC(10)*(1.+P(132)*PLG(1,0))* $
                        ((P(52)*PLG(2,1)+P(98)*PLG(4,1)+P(67)*PLG(6,1))* $
                        COS(DGTR*(lon-P(97))))  $
                        +APT(0)*SWC(10)*SWC(4)* $
                        (P(133)*PLG(1,1)+P(134)*PLG(3,1)+P(135)*PLG(5,1))* $
                        CD14*COS(DGTR*(lon-P(136))) $
                        +APT(0)*SWC(11)*  $
                        (P(55)*PLG(1,0)+P(56)*PLG(3,0)+P(57)*PLG(5,0))* $
                        COS(SR*(SEC-P(58)))
              endelse
          endif
      endif
;  PARMS NOT USED: 83,90,100,140-150 (FORTRAN)
;                  82,89,99,139-149  (IDL)
      TINF = P(30)
      tinf = tinf + total(abs(sw(0:nsw-1))*T(0:nsw-1))
      RETURN,tinf
      END
;
;       ^^ N2 DENSITY ^^
;
pro n2density,g28,d,alt,tinf,t,tz,b28
      COMMON MSIS2KDAT,IYD,SEC,GLAT,GLONG,STL,F107A,F107,AP,MASS,YRD,DRAG
      COMMON PARM7,PT,PD,PS,PDL,PTL,PMA,SAM,PARMFL
      COMMON MESO7,ZN1,TN1,ZN2,TN2,ZN3,TN3,TGN1,TGN2,TGN3
      COMMON LOWER7,PTM,PDM
      COMMON DATIME,ISDATE,ISTIME,NAME
      COMMON GTS3C,TLB,S,DB04,DB16,DB28,DB32,DB40,DB48,DB01,ZA,g_0,RL,DD,DB14
      COMMON GTS7MISC,ALTL,MN1,ALPHA,ZHF,XMM,ZHM28
      COMMON DMIX,DM04,DM16,DM28,DM32,DM40,DM01,DM14
      COMMON csw,sw,isw,swc
      COMMON TTEST,TINFG,GB,ROUT,TT
;      Diffusive density at Zlb
;       Eq. A18
          DB28 = PDM(0,2)*EXP(G28)*PD(0,2)
;      Diffusive density at Alt
;       Eq. A13 - A17
          D(2)=DENSU(alt,DB28,TINF,TLB,28.,ALPHA(2),T1,PTM(5),S,$
                     MN1,ZN1,TN1,TGN1)
          T(1) = t1
          DD=D(2)
;      Turbopause
;       Eq. A19
          ZH28=PDM(2,2)*zhf
          ZHM28=PDM(3,2)*PDL(5,1)
          XMD=28.-XMM
;      Mixed density at Zlb
          B28=DENSU(ZH28,DB28,TINF,TLB,XMD,ALPHA(2)-1.,TZ,PTM(5),S,$
                    MN1,ZN1,TN1,TGN1)
          IF (ALT LE ALTL(2) AND SW(14) NE 0 ) then begin
;      Mixed density at alt
              DM28=DENSU(alt,B28,TINF,TLB,XMM,ALPHA(2),TZ,PTM(5),S,$
                         MN1,ZN1,TN1,TGN1)
;      Net density at Alt
;      Eq. A12
              D(2)=DNET(D(2),DM28,ZHM28,XMM,28.)
          endif else DM28=0.
      return
      END
;
;       ^^ HE DENSITY ^^
;
pro hedensity,g28,d,alt,tinf,t,tz,b28
      COMMON MSIS2KDAT,IYD,SEC,GLAT,GLONG,STL,F107A,F107,AP,MASS,YRD,DRAG
      COMMON PARM7,PT,PD,PS,PDL,PTL,PMA,SAM,PARMFL
      COMMON MESO7,ZN1,TN1,ZN2,TN2,ZN3,TN3,TGN1,TGN2,TGN3
      COMMON LOWER7,PTM,PDM
      COMMON DATIME,ISDATE,ISTIME,NAME
      COMMON GTS3C,TLB,S,DB04,DB16,DB28,DB32,DB40,DB48,DB01,ZA,g_0,RL,DD,DB14
      COMMON GTS7MISC,ALTL,MN1,ALPHA,ZHF,XMM,ZHM28
      COMMON DMIX,DM04,DM16,DM28,DM32,DM40,DM01,DM14
      COMMON csw,sw,isw,swc
      COMMON TTEST,TINFG,GB,ROUT,TT
;       Density variation factor at Zlb
;       Eq. A18
      G4 = SW(20)*GLOBE7(YRD,SEC,GLAT,GLONG,STL,F107A,F107,AP,PD(*,0))
      DB04 = PDM(0,0)*EXP(G4)*PD(0,0)
;      Diffusive density at Zlb
;       Eq. A13 - A17
      D(0)=DENSU(ALT,DB04,TINF,TLB, 4.,ALPHA(0),T(1),PTM(5),S,$
                 MN1,ZN1,TN1,TGN1)
      DD=D(0)
      IF not (ALT GT ALTL(0) OR SW(14) EQ 0 ) then begin
;      Turbopause
;       Eq. A19
          ZH04=PDM(2,0)
;      Mixed density at Zlb
          B04=DENSU(ZH04,DB04,TINF,TLB,4.-XMM,ALPHA(0)-1.,T(1),PTM(5),S,$
                    MN1,ZN1,TN1,TGN1)
;      Mixed density at alt
          DM04=DENSU(alt,B04,TINF,TLB,XMM,0.,T(1),PTM(5),S,$
                         MN1,ZN1,TN1,TGN1)
          ZHM04 = ZHM28
;      Net density at Alt
;      Eq. A12
          D(0)=DNET(D(0),DM04,ZHM04,XMM,4.)
;      Correction to specified mixing ratio at ground
          RL=ALOG(B28*PDM(1,0)/B04)
          ZC04=PDM(4,0)*PDL(0,1)
          HC04=PDM(5,0)*PDL(1,1)
;      Net density corrected at Alt
          D(0)=D(0)*CCOR(ALT,RL,HC04,ZC04)
      endif
return
end
;
;      ^^ O DENSITY ^^
;
pro odensity,g28,d,alt,tinf,t,tz,b28
      COMMON MSIS2KDAT,IYD,SEC,GLAT,GLONG,STL,F107A,F107,AP,MASS,YRD,DRAG
      COMMON PARM7,PT,PD,PS,PDL,PTL,PMA,SAM,PARMFL
      COMMON MESO7,ZN1,TN1,ZN2,TN2,ZN3,TN3,TGN1,TGN2,TGN3
      COMMON LOWER7,PTM,PDM
      COMMON DATIME,ISDATE,ISTIME,NAME
      COMMON GTS3C,TLB,S,DB04,DB16,DB28,DB32,DB40,DB48,DB01,ZA,g_0,RL,DD,DB14
      COMMON GTS7MISC,ALTL,MN1,ALPHA,ZHF,XMM,ZHM28
      COMMON DMIX,DM04,DM16,DM28,DM32,DM40,DM01,DM14
      COMMON csw,sw,isw,swc
      COMMON TTEST,TINFG,GB,ROUT,TT

;       Density variation factor at Zlb
      G16= SW(20)*GLOBE7(YRD,SEC,GLAT,GLONG,STL,F107A,F107,AP,PD(*,1))
;      Diffusive density at Zlb
      DB16 = PDM(0,1)*EXP(G16)*PD(0,1)
;       Diffusive density at Alt
      D(1)=DENSU(ALT,DB16,TINF,TLB, 16.,ALPHA(1),T(1),PTM(5),S,$
                 MN1,ZN1,TN1,TGN1)
      DD = D(1)
      IF not (ALT GT ALTL(1) OR SW(14) EQ 0 ) then begin
;       Turbopause
          ZH16=PDM(2,1)
;      Mixed density at Zlb
          B16=DENSU(ZH16,DB16,TINF,TLB,16.-XMM,ALPHA(1)-1.,T(1),PTM(5),S,$
                    MN1,ZN1,TN1,TGN1)
;      Mixed density at Alt
          DM16=DENSU(ALT,B16,TINF,TLB,XMM,0.,T(1),PTM(5),S,$
                    MN1,ZN1,TN1,TGN1)
          ZHM16=ZHM28
;      Net density at Alt
          D(1)=DNET(D(1),DM16,ZHM16,XMM,16.)
;   3/16/99 Change form to match O2 departure from diff equil near 150
;   km and add dependence on F10.7
;      RL=ALOG(B28*PDM(1,1)*ABS(PDL(16,1))/B16)
          RL=PDM(1,1)*PDL(16,1)*(1.+SW(0)*PDL(23,0)*(F107A-150.))
          HC16=PDM(5,1)*PDL(3,1)
          ZC16=PDM(4,1)*PDL(2,1)
          D(1)=D(1)*CCOR(ALT,RL,HC16,ZC16)
;       Chemistry correction
          ZCC16=PDM(6,1)*PDL(12,1)
          HCC16=PDM(7,1)*PDL(13,1)
          RC16=PDM(3,1)*PDL(14,1)
;      Net density corrected at Alt
          D(1)=D(1)*CCOR(ALT,RC16,HCC16,ZCC16)
      endif
return
end
;
;       ^^ O2 DENSITY ^^
;
pro o2density,g28,d,alt,tinf,t,tz,b28
      COMMON MSIS2KDAT,IYD,SEC,GLAT,GLONG,STL,F107A,F107,AP,MASS,YRD,DRAG
      COMMON PARM7,PT,PD,PS,PDL,PTL,PMA,SAM,PARMFL
      COMMON MESO7,ZN1,TN1,ZN2,TN2,ZN3,TN3,TGN1,TGN2,TGN3
      COMMON LOWER7,PTM,PDM
      COMMON DATIME,ISDATE,ISTIME,NAME
      COMMON GTS3C,TLB,S,DB04,DB16,DB28,DB32,DB40,DB48,DB01,ZA,g_0,RL,DD,DB14
      COMMON GTS7MISC,ALTL,MN1,ALPHA,ZHF,XMM,ZHM28
      COMMON DMIX,DM04,DM16,DM28,DM32,DM40,DM01,DM14
      COMMON csw,sw,isw,swc
      COMMON TTEST,TINFG,GB,ROUT,TT

;       Density variation factor at Zlb
;       Eq. A18
      G32= SW(20)*GLOBE7(YRD,SEC,GLAT,GLONG,STL,F107A,F107,AP,PD(*,4))
;       diffusive density at Zlb
      DB32 = PDM(0,3)*EXP(G32)*PD(0,4)
;       diffusive density at Alt
;       Eq. A13 - A17
      D(3)=DENSU(ALT,DB32,TINF,TLB, 32.,ALPHA(3),T(1),PTM(5),S,$
                 MN1,ZN1,TN1,TGN1)
      IF(MASS EQ 49) THEN DD=DD+2.*D(3) ELSE DD=D(3)
      if (sw(14) eq 0) then return
      IF (ALT LE ALTL(3)) then begin
;       Turbopause
;       Eq. A19
          ZH32=PDM(2,3)
;      Mixed density at Zlb
          B32=DENSU(ZH32,DB32,TINF,TLB, 32.-XMM,ALPHA(3)-1,T(1),PTM(5),S,$
                    MN1,ZN1,TN1,TGN1)
;      Mixed density at Alt
          DM32=DENSU(ALT,B32,TINF,TLB, XMM,0.,T(1),PTM(5),S,$
                    MN1,ZN1,TN1,TGN1)
          ZHM32=ZHM28
;      Net density at Alt
;       Eq. A12
          D(3)=DNET(D(3),DM32,ZHM32,XMM,32.)
;       Correction to specified mixing ratio at ground
;       Eq. A20b
          RL=ALOG(B28*PDM(1,3)/B32)
;       Eq. A20a
          HC32=PDM(5,3)*PDL(7,1)
          ZC32=PDM(4,3)*PDL(6,1)
          D(3)=D(3)*CCOR(ALT,RL,HC32,ZC32)
      endif
;      Correction for general departure from diffusive equilibrium above Zlb
      HCC32=PDM(7,3)*PDL(22,1)
      ZCC32=PDM(6,3)*PDL(21,1)
      RC32=PDM(3,3)*PDL(23,1)*(1.+SW(0)*PDL(23,0)*(F107A-150.))
;      Net density corrected at Alt
      D(3)=D(3)*CCOR(ALT,RC32,HCC32,ZCC32)
return
end
;
;       ^^ AR DENSITY ^^
;
pro ardensity,g28,d,alt,tinf,t,tz,b28
      COMMON MSIS2KDAT,IYD,SEC,GLAT,GLONG,STL,F107A,F107,AP,MASS,YRD,DRAG
      COMMON PARM7,PT,PD,PS,PDL,PTL,PMA,SAM,PARMFL
      COMMON MESO7,ZN1,TN1,ZN2,TN2,ZN3,TN3,TGN1,TGN2,TGN3
      COMMON LOWER7,PTM,PDM
      COMMON DATIME,ISDATE,ISTIME,NAME
      COMMON GTS3C,TLB,S,DB04,DB16,DB28,DB32,DB40,DB48,DB01,ZA,g_0,RL,DD,DB14
      COMMON GTS7MISC,ALTL,MN1,ALPHA,ZHF,XMM,ZHM28
      COMMON DMIX,DM04,DM16,DM28,DM32,DM40,DM01,DM14
      COMMON csw,sw,isw,swc
      COMMON TTEST,TINFG,GB,ROUT,TT

;       Density variation factor at Zlb
;       Eq. A18
      G40 = SW(20)*GLOBE7(YRD,SEC,GLAT,GLONG,STL,F107A,F107,AP,PD(*,5))
      DB40 = PDM(0,4)*EXP(G40)*PD(0,5)
;      Diffusive density at Zlb
;       Eq. A13 - A17
      D(4)=DENSU(ALT,DB40,TINF,TLB, 40.,ALPHA(4),T(1),PTM(5),S,$
                 MN1,ZN1,TN1,TGN1)
      DD=D(4)
      IF not (ALT GT ALTL(4) OR SW(14) EQ 0 ) then begin
;      Turbopause
;       Eq. A19
          ZH40=PDM(2,4)
;      Mixed density at Zlb
          B40=DENSU(ZH40,DB40,TINF,TLB,40.-XMM,ALPHA(4)-1.,T(1),PTM(5),S,$
                    MN1,ZN1,TN1,TGN1)
;      Mixed density at alt
          DM40=DENSU(alt,B40,TINF,TLB,XMM,0.,T(1),PTM(5),S,$
                         MN1,ZN1,TN1,TGN1)
          ZHM40 = ZHM28
;      Net density at Alt
;      Eq. A12
          D(4)=DNET(D(4),DM40,ZHM40,XMM,40.)
;      Correction to specified mixing ratio at ground
          RL=ALOG(B28*PDM(1,4)/B40)
          ZC40=PDM(4,4)*PDL(8,1)
          HC40=PDM(5,4)*PDL(9,1)
;      Net density corrected at Alt
          D(4)=D(4)*CCOR(ALT,RL,HC40,ZC40)
      endif
return
end
;
;        ^^ HYDROGEN DENSITY ^^
;
pro hdensity,g28,d,alt,tinf,t,tz,b28
      COMMON MSIS2KDAT,IYD,SEC,GLAT,GLONG,STL,F107A,F107,AP,MASS,YRD,DRAG
      COMMON PARM7,PT,PD,PS,PDL,PTL,PMA,SAM,PARMFL
      COMMON MESO7,ZN1,TN1,ZN2,TN2,ZN3,TN3,TGN1,TGN2,TGN3
      COMMON LOWER7,PTM,PDM
      COMMON DATIME,ISDATE,ISTIME,NAME
      COMMON GTS3C,TLB,S,DB04,DB16,DB28,DB32,DB40,DB48,DB01,ZA,g_0,RL,DD,DB14
      COMMON GTS7MISC,ALTL,MN1,ALPHA,ZHF,XMM,ZHM28
      COMMON DMIX,DM04,DM16,DM28,DM32,DM40,DM01,DM14
      COMMON csw,sw,isw,swc
      COMMON TTEST,TINFG,GB,ROUT,TT

;       Density variation factor at Zlb
;       Eq. A18
      G1 = SW(20)*GLOBE7(YRD,SEC,GLAT,GLONG,STL,F107A,F107,AP,PD(*,6))
;      Diffusive density at Zlb
;       Eq. A13 - A17
      DB01 = PDM(0,5)*EXP(G1)*PD(0,6)
;      Diffusive density at Alt
      D(6)=DENSU(ALT,DB01,TINF,TLB, 1.,ALPHA(6),T(1),PTM(5),S,$
                 MN1,ZN1,TN1,TGN1)
      DD=D(6)
      IF not (ALT GT ALTL(6) OR SW(14) EQ 0 ) then begin
;      Turbopause
;       Eq. A19
          ZH01=PDM(2,5)
;      Mixed density at Zlb
          B01=DENSU(ZH01,DB01,TINF,TLB,1.-XMM,ALPHA(6)-1.,T(1),PTM(5),S,$
                    MN1,ZN1,TN1,TGN1)
;      Mixed density at alt
          DM01=DENSU(alt,B01,TINF,TLB,XMM,0.,T(1),PTM(5),S,$
                         MN1,ZN1,TN1,TGN1)
          ZHM01 = ZHM28
;      Net density at Alt
;      Eq. A12
          D(6)=DNET(D(6),DM01,ZHM01,XMM,1.)
;      Correction to specified mixing ratio at ground
          RL=ALOG(B28*PDM(1,5)*ABS(PDL(17,1))/B01)
          ZC01=PDM(4,5)*PDL(10,1)
          HC01=PDM(5,5)*PDL(11,1)
          D(6)=D(6)*CCOR(ALT,RL,HC01,ZC01)
;       Chemistry correction
          ZCC01=PDM(6,5)*PDL(18,1)
          HCC01=PDM(7,5)*PDL(19,1)
          RC01=PDM(3,5)*PDL(20,1)
;      Net density corrected at Alt
          D(6)=D(6)*CCOR(ALT,RC01,HCC01,ZCC01)
      endif
return
end
;
;        ^^ ATOMIC NITROGEN DENSITY ^^
;
pro ndensity,g28,d,alt,tinf,t,tz,b28
      COMMON MSIS2KDAT,IYD,SEC,GLAT,GLONG,STL,F107A,F107,AP,MASS,YRD,DRAG
      COMMON PARM7,PT,PD,PS,PDL,PTL,PMA,SAM,PARMFL
      COMMON MESO7,ZN1,TN1,ZN2,TN2,ZN3,TN3,TGN1,TGN2,TGN3
      COMMON LOWER7,PTM,PDM
      COMMON DATIME,ISDATE,ISTIME,NAME
      COMMON GTS3C,TLB,S,DB04,DB16,DB28,DB32,DB40,DB48,DB01,ZA,g_0,RL,DD,DB14
      COMMON GTS7MISC,ALTL,MN1,ALPHA,ZHF,XMM,ZHM28
      COMMON DMIX,DM04,DM16,DM28,DM32,DM40,DM01,DM14
      COMMON csw,sw,isw,swc
      COMMON TTEST,TINFG,GB,ROUT,TT

;       Density variation factor at Zlb
;       Eq. A18
      G14 = SW(20)*GLOBE7(YRD,SEC,GLAT,GLONG,STL,F107A,F107,AP,PD(*,7))
;      Diffusive density at Zlb
;       Eq. A13 - A17
      DB14 = PDM(0,6)*EXP(G14)*PD(0,7)
;      Diffusive density at Alt
      D(7)=DENSU(ALT,DB14,TINF,TLB, 14.,ALPHA(7),T(1),PTM(5),S,$
                 MN1,ZN1,TN1,TGN1)
      DD=D(7)
      IF not (ALT GT ALTL(7) OR SW(14) EQ 0 ) then begin
;      Turbopause
;       Eq. A19
          ZH14=PDM(2,6)
;      Mixed density at Zlb
          B14=DENSU(ZH14,DB14,TINF,TLB,14.-XMM,ALPHA(7)-1.,T(1),PTM(5),S,$
                    MN1,ZN1,TN1,TGN1)
;      Mixed density at alt
          DM14=DENSU(alt,B14,TINF,TLB,XMM,0.,T(1),PTM(5),S,$
                         MN1,ZN1,TN1,TGN1)
          ZHM14 = ZHM28
;      Net density at Alt
;      Eq. A12
          D(7)=DNET(D(7),DM14,ZHM14,XMM,14.)
;      Correction to specified mixing ratio at ground
          RL=ALOG(B28*PDM(1,6)*ABS(PDL(2,0))/B14)
          ZC14=PDM(4,6)*PDL(0,0)
          HC14=PDM(5,6)*PDL(1,0)
          D(7)=D(7)*CCOR(ALT,RL,HC14,ZC14)
;       Chemistry correction
          ZCC14=PDM(6,6)*PDL(3,0)
          HCC14=PDM(7,6)*PDL(4,0)
          RC14=PDM(3,6)*PDL(5,0)
;      Net density corrected at Alt
          D(7)=D(7)*CCOR(ALT,RC14,HCC14,ZCC14)
      endif
return
end
pro odensity_anom,g28,d,alt,tinf,t,tz,b28
      COMMON MSIS2KDAT,IYD,SEC,GLAT,GLONG,STL,F107A,F107,AP,MASS,YRD,DRAG
      COMMON PARM7,PT,PD,PS,PDL,PTL,PMA,SAM,PARMFL
      COMMON MESO7,ZN1,TN1,ZN2,TN2,ZN3,TN3,TGN1,TGN2,TGN3
      COMMON LOWER7,PTM,PDM
      COMMON DATIME,ISDATE,ISTIME,NAME
      COMMON GTS3C,TLB,S,DB04,DB16,DB28,DB32,DB40,DB48,DB01,ZA,g_0,RL,DD,DB14
      COMMON GTS7MISC,ALTL,MN1,ALPHA,ZHF,XMM,ZHM28
      COMMON csw,sw,isw,swc
      COMMON TTEST,TINFG,GB,ROUT,TT

      G16H= SW(20)*GLOBE7(YRD,SEC,GLAT,GLONG,STL,F107A,F107,AP,PD(*,8))
      DB16H = PDM(0,7)*EXP(G16H)*PD(0,8)
      THO=PDM(9,7)*PDL(6,0)
      DD=DENSU(ALT,DB16H,THO,THO,16.,ALPHA(8),t(1),PTM(5),S,$
              MN1,ZN1,TN1,TGN1)
      ZSHT=PDM(5,7)
      ZMHO=PDM(4,7)
      ZSHO=SCALH(ZMHO,16.,THO)
      D(8)=DD*EXP(-ZSHT/ZSHO*(EXP(-(ALT-ZMHO)/ZSHT)-1.))
return
end
;-----------------------------------------------------------------------
      FUNCTION GLOB7S,P
;      VERSION OF GLOBE FOR LOWER ATMOSPHERE 10/26/99
      COMMON LPOLY,PLG,CTLOC,STLOC,C2TLOC,S2TLOC,C3TLOC,S3TLOC,$
                   IYR,DAY,DF,DFA,APD,APDF,APT,xlong
      COMMON LPOLY2,DGTR,DR,XL,TLL,sw9,DAYL,P14,P18,P32,HR,SR,SV,NSW,P39,$
                    cd14,c2d14,cd18,cd32,cd39
      COMMON GLOB7S_INFO,INITFLAG,PSET
      COMMON CSW,SW,ISW,SWC
;
; define constants
      if n_elements(INITFLAG) eq 0 then begin
          PSET=2.
          DR=1.72142E-2
          DGTR=1.74533E-2
          DAYL=-1.
          P32=-1000
          P18=-1000
          P14=-1000
          P39=-100
      endif

;       CONFIRM PARAMETER SET
      IF (P(99) EQ 0) then P(99)=PSET
      IF (P(99) NE PSET) THEN $
          message,"Wrong parameter set for GLOB7S"

;
; If T has not been defined yet, generate the array
;
      if n_elements(T) eq 0 then $
          T = fltarr(NSW) $
      else begin
          T(*) = 0.
      endelse

      IF (DAY NE DAYL OR P32 NE P(31)) then CD32=COS(DR*(DAY-P(31)))
      IF (DAY NE DAYL OR P18 NE P(17)) then CD18=COS(2.*DR*(DAY-P(17)))
      IF (DAY NE DAYL OR P14 NE P(13)) then CD14=COS(DR*(DAY-P(13)))
      IF (DAY NE DAYL OR P39 NE P(38)) then CD39=COS(2.*DR*(DAY-P(38)))
      DAYL=DAY
      P32=P(31)
      P18=P(17)
      P14=P(13)
      P39=P(38)
;
;       F10.7
      T(0)=P(21)*DFA
;       TIME INDEPENDENT
      T(1)=P(1)*PLG(2,0)+P(2)*PLG(4,0)+P(22)*PLG(6,0)
     $     +P(26)*PLG(1,0)+P(14)*PLG(3,0)+P(59)*PLG(5,0)
;       SYMMETRICAL ANNUAL
      T(2)=(P(18)+P(47)*PLG(2,0)+P(29)*PLG(4,0))*CD32
;       SYMMETRICAL SEMIANNUAL
      T(3)=(P(15)+P(16)*PLG(2,0)+P(30)*PLG(4,0))*CD18
;       ASYMMETRICAL ANNUAL
      T(4)=(P(9)*PLG(1,0)+P(10)*PLG(3,0)+P(20)*PLG(5,0))*CD14
;       ASYMMETRICAL SEMIANNUAL
      T(5)=(P(37)*PLG(1,0))*CD39
;        DIURNAL
      IF(SW(6) ne 0) then begin
          T71 = P(11)*PLG(2,1)*CD14*SWC(4)
          T72 = P(12)*PLG(2,1)*CD14*SWC(4)
          T(6) =   ((P(3)*PLG(1,1) + P(4)*PLG(3,1) + T71)*CTLOC + $
                    (P(6)*PLG(1,1) + P(7)*PLG(3,1) + T72)*STLOC)
      endif
;        SEMIDIURNAL
      IF (SW(7) ne 0) then begin
          T81 = (P(23)*PLG(3,2)+P(35)*PLG(5,2))*CD14*SWC(4)
          T82 = (P(33)*PLG(3,2)+P(36)*PLG(5,2))*CD14*SWC(4)
          T(7) =  ((P(5)*PLG(2,2) + P(41)*PLG(4,2) + T81)*C2TLOC + $
                   (P(8)*PLG(2,2) + P(42)*PLG(4,2) + T82)*S2TLOC)
      endif
;        TERDIURNAL
      IF (SW(13) ne 0) then $
          T(13) = P(39)*PLG(3,3)*S3TLOC +P(40)*PLG(3,3)*C3TLOC
;       MAGNETIC ACTIVITY
      IF (SW(8) ne 0) then begin
          IF(SW(8) eq 1) then $
              T(8)=APDF*(P(32)+P(45)*PLG(2,0)*SWC(1)) $
          else IF(SW(8) eq -1) then $
              T(8)=(P(50)*APT(0)+P(96)*PLG(2,0)*APT(0)*SWC(1))
      endif
;        LONGITUDINAL
      IF (SW(9) ne 0 and SW(10) ne 0 and xlong gt -1000.) then begin
          T(10)= (1.+PLG(1,0)*(P(80)*SWC(4)*COS(DR*(DAY-P(81))) $
                    +P(85)*SWC(5)*COS(2.*DR*(DAY-P(86))))       $
                    +P(83)*SWC(2)*COS(DR*(DAY-P(84)))           $
                    +P(87)*SWC(3)*COS(2.*DR*(DAY-P(88))))       $
                *((P(64)*PLG(2,1)+P(65)*PLG(4,1)+P(66)*PLG(6,1) $
                  +P(74)*PLG(1,1)+P(75)*PLG(3,1)+P(76)*PLG(5,1) $
                  )*COS(DGTR*xlong)                              $
                +(P(90)*PLG(2,1)+P(91)*PLG(4,1)+P(92)*PLG(6,1)  $
                 +P(77)*PLG(1,1)+P(78)*PLG(3,1)+P(79)*PLG(5,1)  $
                  )*SIN(DGTR*xlong))
      endif
      return,total(t(0:nsw-1)*abs(sw(0:nsw-1)))
      END
;-----------------------------------------------------------------------
pro GTS7,ALT,D,T,mass=mss,t_inf_in=t_inf_in  ,s_bates_in=s_bates_in  ,t_lb_in=t_lb_in,$
                          t_inf_out=t_inf_out,s_bates_out=s_bates_out,t_lb_out=t_lb_out
;
;    *** Thermospheric portion of NRLMSISE-00 ***
;     See GTD7 for more extensive comments
;
;     INPUT VARIABLES:  none (uses common block)
;
;     OUTPUT VARIABLES:
;        D(1) - HE NUMBER DENSITY(CM-3)
;        D(2) - O NUMBER DENSITY(CM-3)
;        D(3) - N2 NUMBER DENSITY(CM-3)
;        D(4) - O2 NUMBER DENSITY(CM-3)
;        D(5) - AR NUMBER DENSITY(CM-3)
;        D(6) - TOTAL MASS DENSITY(GM/CM3) [Anomalous O NOT included]
;        D(7) - H NUMBER DENSITY(CM-3)
;        D(8) - N NUMBER DENSITY(CM-3)
;        D(9) - Anomalous oxygen NUMBER DENSITY(CM-3)
;        T(1) - EXOSPHERIC TEMPERATURE
;        T(2) - TEMPERATURE AT ALT
;
      COMMON MSIS2KDAT,IYD,SEC,GLAT,GLONG,STL,F107A,F107,AP,MASS,YRD,DRAG
      COMMON GTS3C,TLB,S,DB04,DB16,DB28,DB32,DB40,DB48,DB01,ZA,g_0,RL,DD,DB14
      COMMON PARM7,PT,PD,PS,PDL,PTL,PMA,SAM,PARMFL
      COMMON MESO7,ZN1,TN1,ZN2,TN2,ZN3,TN3,TGN1,TGN2,TGN3
      COMMON LOWER7,PTM,PDM
      COMMON CSW,SW,ISW,SWC
      COMMON TTEST,TINFG,GB,ROUT,TT
      COMMON DMIX,DM04,DM16,DM28,DM32,DM40,DM01,DM14
      COMMON METSEL,IMR
      COMMON GTS7MISC,ALTL,MN1,ALPHA,ZHF,XMM,ZHM28
;
; Mass/species selections
;
      MT = [48,0,4,16,28,32,40,1,49,14,17]
      if not keyword_Set(mss) then mss=mass
      select = where(mss eq mt)
      if select(0) eq -1 then begin
          message,"Invalid mass selection.  Defaults to 48 (full set).",/info
          mss = 48
      endif
;
; generate needed constants
;
      MN1 = n_elements(ZN1)
      ALTL = [200.,300.,160.,250.,240.,450.,320.,450.]
      DGTR = 1.74533E-2
      DR = 1.72142E-2
      ALAST =-999.
      ALPHA = [-0.38,0.,0.,0.,0.17,0.,-0.38,0.,0.]
;
;        Test for changed input
;
      V2=VTST7(IYD,SEC,GLAT,GLONG,STL,F107A,F107,AP,1)
;
      ZA=PDL(15,1)
      ZN1(0)=ZA
      d = fltarr(9)
      t = fltarr(2)
;
;        TINF VARIATIONS NOT IMPORTANT BELOW ZA OR ZN1(0)
;
      if keyword_set(t_inf_in) then begin
          tinf = t_inf_in
      endif else IF (ALT GT ZN1(0)) THEN begin
          IF (V2 EQ 1. OR ALAST LE ZN1(0)) then $
              TINF=PTM(0)*PT(0)*(1.+SW(15)*$
                   GLOBE7(YRD,SEC,GLAT,GLONG,STL,F107A,F107,AP,PT))
      endif else $
          TINF=PTM(0)*PT(0)
      t_inf_out = tinf                    ;handle output of value
      T(0)=TINF
;
;     GRADIENT VARIATIONS NOT IMPORTANT BELOW ZN1(4)~72 km
;
      IF (ALT GT ZN1(4)) THEN begin
          IF (V2 EQ 1. OR ALAST LE ZN1(4)) then begin
              G_0=PTM(3)*PS(0)*(1.+SW(18)*$
                 GLOBE7(YRD,SEC,GLAT,GLONG,STL,F107A,F107,AP,PS))
          endif
      endif ELSE $
          G_0=PTM(3)*PS(0)
;
;      Calculate these temperatures only if input changed
;
      if keyword_set(t_lb_in) then begin
          tlb = t_lb_in
      endif else IF (V2 EQ 1. OR ALT LT 300.) then $
          TLB=PTM(1)*(1.+SW(16)*$
              GLOBE7(YRD,SEC,GLAT,GLONG,STL,$
                     F107A,F107,AP,PD(*,3)))*PD(0,3)
      t_lb_out = tlb
;
; Calculate the bates gradient parameter
;
      if keyword_set(s_bates_in) then $
          S = s_bates_in $
      else $
          S=G_0/(TINF-TLB)
      s_bates_out=s                              ;handle output of value
;
;       Lower thermosphere temp variations will be accounted for
;       using spline on values ZN1,TN1.  End point slope must
;       be specified
;
       IF (ALT LT 300.) THEN begin
           IF(V2 EQ 1. OR ALAST GE 300.) THEN begin
               TN1(1) =PTM(6)*PTL(0,0)/(1.-SW(17)*GLOB7S(PTL(*,0)))
               TN1(2) =PTM(2)*PTL(0,1)/(1.-SW(17)*GLOB7S(PTL(*,1)))
               TN1(3) =PTM(7)*PTL(0,2)/(1.-SW(17)*GLOB7S(PTL(*,2)))
               TN1(4) =PTM(4)*PTL(0,3)/(1.-SW(17)*SW(19)*GLOB7S(PTL(*,3)))
               TGN1(1)=PTM(8)*PMA(0,8)*(1.+SW(17)*SW(19)*GLOB7S(PMA(*,8))) $
                       *TN1(4)*TN1(4)/(PTM(4)*PTL(0,3))^2
           ENDIF
;
;       Lower thermosphere temp variations not significant for
;        density above 300 km
;
       endif ELSE begin
           TN1(1)=PTM(6)*PTL(0,0)
           TN1(2)=PTM(2)*PTL(0,1)
           TN1(3)=PTM(7)*PTL(0,2)
           TN1(4)=PTM(4)*PTL(0,3)
           TGN1(1)=PTM(8)*PMA(0,8)*TN1(4)*TN1(4)/(PTM(4)*PTL(0,3))^2
       ENDelse
;
;
; If only temperature is desired
;
      IF (MSS EQ 0) then begin
          Z=ABS(ALT)
          DDUM  = DENSU(Z,1., TINF,TLB,0.,0.,T1,PTM(5),S,MN1,ZN1,TN1,TGN1)
          t(1) = t1
      endif else begin
;
; N2 variation factor at Zlb
;
          G28=SW(20)*GLOBE7(YRD,SEC,GLAT,GLONG,STL,F107A,F107,AP,PD(*,2))
          DAY=yrd mod 1000.
;
; VARIATION OF TURBOPAUSE HEIGHT
;
          ZHF=PDL(24,1)*(1.+SW(4)*PDL(24,0)*$
              SIN(DGTR*GLAT)*COS(DR*(DAY-PT(13))))
          YRD=IYD
          T(0)=TINF
          XMM=PDM(4,2)
          Z=ALT
;
          if (z le altl(5) or mss eq 28 or mss eq 48) then begin
              n2density,g28,d,alt,tinf,t,tz,b28
              dd = d(2)
          endif
;
; Handle the possible MASS values
;        D(0) - HE NUMBER DENSITY(CM-3)
;        D(1) - O NUMBER DENSITY(CM-3)
;        D(2) - N2 NUMBER DENSITY(CM-3)
;        D(3) - O2 NUMBER DENSITY(CM-3)
;        D(4) - AR NUMBER DENSITY(CM-3)
;        D(5) - TOTAL MASS DENSITY(GM/CM3)
;        D(6) - H NUMBER DENSITY(CM-3)
;        D(7) - N NUMBER DENSITY(CM-3)
;        D(8) - Anomalous oxygen NUMBER DENSITY(CM-3)
;        T(0) - EXOSPHERIC TEMPERATURE
;        T(1) - TEMPERATURE AT ALT
;;
          case MSS of
              0:                                             ;handled previously
              1: hdensity,g28,d,alt,tinf,t,tz,b28
              4: hedensity,g28,d,alt,tinf,t,tz,b28
             14: ndensity,g28,d,alt,tinf,t,tz,b28
             16: odensity,g28,d,alt,tinf,t,tz,b28
             17: odensity_anom,g28,d,alt,tinf,t,tz,b28
             28:                                             ;already computed
             32: o2density,g28,d,alt,tinf,t,tz,b28
             40: ardensity,g28,d,alt,tinf,t,tz,b28
             48: begin
                 hedensity,g28,d,alt,tinf,t,tz,b28
                 odensity,g28,d,alt,tinf,t,tz,b28
                 o2density,g28,d,alt,tinf,t,tz,b28
                 ardensity,g28,d,alt,tinf,t,tz,b28
                 hdensity,g28,d,alt,tinf,t,tz,b28
                 ndensity,g28,d,alt,tinf,t,tz,b28
                 odensity_anom,g28,d,alt,tinf,t,tz,b28
;
;       TOTAL MASS DENSITY--not including anomalous O
                 D(5) = 1.66E-24*total([4.,16.,28.,32.,40.,1.,14.]*$
                                       D([0,1,2,3,4,6,7])          )
                 DB48=1.66E-24*(4.*DB04+16.*DB16+28.*DB28+32.*DB32+$
                                40.*DB40+DB01+14.*DB14)
                 end
             49: begin
                 odensity,g28,d,alt,tinf,t,tz,b28
                 o2density,g28,d,alt,tinf,t,tz,b28
                 odensity_anom,g28,d,alt,tinf,t,tz,b28
                 end
           else: message,"Invalid mass selection.  Check logic of CASE statement."
          endcase
      endelse
;
;       ADJUST DENSITIES FROM CGS TO KGM
      IF (IMR EQ 1) THEN d = d*[1e6,1e6,1e6,1e6,1e6,1e3,1e6,1e6,1e6]
      ALAST=ALT
      RETURN
      END
;--------------------------------------------------------------------
FUNCTION DENSM,ALT,D0,XM,TZ,ZN3,TN3,TGN3,ZN2,TN2,TGN2
;       Calculate Temperature and Density Profiles for lower atmos.
      COMMON PARMB,GSURF,RE
      xs = fltarr(10)
      ys = fltarr(10)
      ysout = fltarr(10)
      mn2 = n_elements(tn2)
      mn3 = n_elements(tn3)
      RGAS =831.4
      DENSM=D0
;
;     ABOVE MESOSPHERE -- ignore
      IF (ALT GT ZN2(0)) then begin
          if (xm eq 0) then densm = tz
          return,densm
;
;      STRATOSPHERE/MESOSPHERE TEMPERATURE
      ENDIF ELSE BEGIN
          Z=max([ALT,ZN2(MN2-1)])
          MN=MN2
          Z1=ZN2(0)
          Z2=ZN2(MN-1)
          T1=TN2(0)
          T2=TN2(MN-1)
          ZG=ZETA(Z,Z1)
          ZGDIF=ZETA(Z2,Z1)
;       Set up spline nodes
          XS=ZETA(ZN2,Z1)/ZGDIF
          YS=1./TN2
          YD1=-TGN2(0)/(T1*T1)*ZGDIF
          YD2=-TGN2(1)/(T2*T2)*ZGDIF*((RE+Z2)/(RE+Z1))^2
;       Calculate spline coefficients
          nrspline_msis,XS,YS,yp=[YD1,YD2]
          X=ZG/ZGDIF
          Y = (nrsplint_msis(x))(0)
;       Temperature at altitude
          TZ=1./Y
          IF (XM ne 0.) then begin
;
;      CALCULATE STRATOSPHERE/MESOSPHERE DENSITY
              GLB=GSURF/(1.+Z1/RE)^2
              GAMM=XM*GLB*ZGDIF/RGAS
;       Integrate temperature profile
              YI = (nrsplini_msis(x))(0)
              EXPL=GAMM*YI
              IF (EXPL GT 50.) then EXPL=50.
;       Density at altitude
              DENSM=DENSM*(T1/TZ)*EXP(-EXPL)
          endif
;
;      Upper stratosphere/mesosphere only -- bail out here
          IF (ALT gt ZN3(0)) then begin
              if (xm eq 0) then densm = tz
              return,densm
          endif
;
;      TROPOSPHERE/STRATOSPHERE TEMPERATURE
          Z=ALT
          MN=MN3
          Z1=ZN3(0)           ;32.5 km
          Z2=ZN3(MN-1)        ;ground level
          T1=TN3(0)
          T2=TN3(MN-1)
          ZG=ZETA(Z,Z1)
          ZGDIF=ZETA(Z2,Z1)
;       Set up spline nodes
          xs=ZETA(ZN3,Z1)/ZGDIF
          YS=1./TN3
          YD1=-TGN3(0)/(T1*T1)*ZGDIF
          YD2=-TGN3(1)/(T2*T2)*ZGDIF*((RE+Z2)/(RE+Z1))^2
;       Calculate spline coefficients
          nrspline_msis,XS,YS,yp=[YD1,YD2]
          X=ZG/ZGDIF
          y = nrsplint_msis(x)
;       temperature at altitude
          TZ=1./Y
          IF (XM ne 0.) then begin
;
;      CALCULATE TROPOSPHERIC/STRATOSPHERE DENSITY
;
              GLB=GSURF/(1.+Z1/RE)^2
              GAMM=XM*GLB*ZGDIF/RGAS
;        Integrate temperature profile
              YI = (nrsplini_msis(x))(0)
              EXPL=GAMM*YI
              IF (EXPL GT 50.) then EXPL=50.
;        Density at altitude
              DENSM=DENSM*(T1/TZ)*EXP(-EXPL)
          endif
      endelse
      IF (XM EQ 0) then DENSM=TZ
      RETURN,DENSM
      END
;-----------------------------------------------------------------------
pro n2density_low,alt,ds,tz,dm28m,dmc,d
      COMMON GTS7MISC,ALTL,MN1,ALPHA,ZHF,XMM,ZHM28
      COMMON MESO7,ZN1,TN1,ZN2,TN2,ZN3,TN3,TGN1,TGN2,TGN3
        DMR=DS(2)/DM28M-1.
        D(2)=DENSM(ALT,DM28M,XMM,TZ,ZN3,TN3,TGN3,ZN2,TN2,TGN2)
        D(2)=D(2)*(1.+DMR*DMC)
return
end
;-----------------------------------------------------------------------
pro hedensity_low,ds,tz,dz28,dmc,d
      COMMON GTS7MISC,ALTL,MN1,ALPHA,ZHF,XMM,ZHM28
      COMMON MESO7,ZN1,TN1,ZN2,TN2,ZN3,TN3,TGN1,TGN2,TGN3
      COMMON LOWER7,PTM,PDM
      D(0)=0.
      DMR=DS(0)/(DZ28*PDM(1,0))-1.
      D(0)=D(2)*PDM(1,0)*(1.+DMR*DMC)
return
end
;-----------------------------------------------------------------------
pro o2density_low,ds,tz,dz28,dmc,d
      COMMON GTS7MISC,ALTL,MN1,ALPHA,ZHF,XMM,ZHM28
      COMMON MESO7,ZN1,TN1,ZN2,TN2,ZN3,TN3,TGN1,TGN2,TGN3
      COMMON LOWER7,PTM,PDM
      D(3)=0.
      DMR=DS(3)/(DZ28*PDM(1,3))-1.
      D(3)=D(2)*PDM(1,3)*(1.+DMR*DMC)
return
end
;-----------------------------------------------------------------------
pro ardensity_low,ds,tz,dz28,dmc,d
      COMMON GTS7MISC,ALTL,MN1,ALPHA,ZHF,XMM,ZHM28
      COMMON MESO7,ZN1,TN1,ZN2,TN2,ZN3,TN3,TGN1,TGN2,TGN3
      COMMON LOWER7,PTM,PDM
      D(4)=0.
      DMR=DS(4)/(DZ28*PDM(1,4))-1.
      D(4)=D(2)*PDM(1,4)*(1.+DMR*DMC)
return
end
;
;-----------------------------------------------------------------------
;
pro GTD7,ALT,D,T,t_inf_in=t_inf_in  ,s_bates_in=s_bates_in  ,t_lb_in=t_lb_in,$
                 t_inf_out=t_inf_out,s_bates_out=s_bates_out,t_lb_out=t_lb_out
;
;     NRLMSISE-00
;     -----------
;        Neutral Atmosphere Empirical Model from the surface to lower
;        exosphere
;
;        NEW FEATURES:
;          *Extensive satellite drag database used in model generation
;          *Revised O2 (and O) in lower thermosphere
;          *Additional nonlinear solar activity term
;          *"ANOMALOUS OXYGEN" NUMBER DENSITY, OUTPUT D(9)
;           At high altitudes (> 500 km), hot atomic oxygen or ionized
;           oxygen can become appreciable for some ranges of subroutine
;           inputs, thereby affecting drag on satellites and debris. We
;           group these species under the term "anomalous oxygen," since
;           their individual variations are not presently separable with
;           the drag data used to define this model component.
;
;
      COMMON MSIS2KDAT,IYD,SEC,GLAT,GLONG,STL,F107A,F107,AP,MASS,YRD,DRAG
      COMMON GTS3C,TLB,S,DB04,DB16,DB28,DB32,DB40,DB48,DB01,ZA,g_0,RL,DD,DB14
      COMMON DMIX,DM04,DM16,DM28,DM32,DM40,DM01,DM14
      COMMON CSW,SW,ISW,SWC
      COMMON PARMB,GSURF,RE
      COMMON PARM7,PT,PD,PS,PDL,PTL,PMA,SAM,PARMFL
      COMMON MESO7,ZN1,TN1,ZN2,TN2,ZN3,TN3,TGN1,TGN2,TGN3
      COMMON LOWER7,PTM,PDM
      COMMON MAVG7,PAVGM
      COMMON DATIME,ISDATE,ISTIME,NAME
      COMMON METSEL,IMR
;
; Define some variables
;
      DS = fltarr(9)            ;temporary holding for density
      TS = fltarr(2)            ;temporary holding for temperature
;
; Data statements
;
          ZN1=[120.,110.,100.,90.,72.5]
          MN1=n_elements(zn1)
          TN1 = fltarr(MN1)
          ZN2=[72.5,55.,45.,32.5]
          MN2=n_elements(ZN2)
          TN2 = fltarr(mn2)
          ZN3=[32.5,20.,15.,10.,0.]
          MN3 = n_elements(zn3)
          TN3 = fltarr(mn3)
          ZMIX=62.5
          ALAST=99999.
          MSSL=-999
          TGN1 = fltarr(2)
          TGN2 = fltarr(2)
          TGN3 = fltarr(2)
;
; Mass/species selections
;
      MT = [48,0,4,16,28,32,40,1,49,14,17]
      select = where(mass eq mt)
      if select(0) eq -1 then begin
          message,"Invalid mass selection.  Defaults to 48 (full set).",/info
          mass = 48
      endif
;
; Test for changed input values
;
V1=VTST7(IYD,SEC,GLAT,GLONG,STL,F107A,F107,AP,0)
;
;       Latitude variation of gravity (none for SW(1)=0)
;
XLAT=GLAT
IF (SW(1) EQ 0) then XLAT=45.
GLATF,XLAT,GSURF,RE
;
      XMM=PDM(4,2)
;
;       THERMOSPHERE/MESOSPHERE (above ZN2(0)~72 km)
      ALTT=MAX([ALT,ZN2(0)])
      MSS=MASS
;       Only calculate N2 in thermosphere if alt in mixed region
      IF (ALT LT ZMIX AND MASS GT 0) then MSS=28
;       Only calculate thermosphere if input parameters changed
;         or altitude above ZN2(1) in mesosphere
      IF ((V1 EQ 1.) OR (ALT GT ZN2(0)) OR $
          (ALAST GT ZN2(0)) OR (MSS NE MSSL) )then begin
          GTS7,ALTT,DS,TS,mass=mss,t_inf_in=t_inf_in  ,s_bates_in=s_bates_in  ,t_lb_in=t_lb_in,$
                                   t_inf_out=t_inf_out,s_bates_out=s_bates_out,t_lb_out=t_lb_out
          DM28M=DM28
;         metric adjustment
          IF (IMR EQ 1) then DM28M=DM28*1.E6
          MSSL=MSS
      ENDIF
      T(0)=TS(0)
      T(1)=TS(1)
      IF (ALT GE ZN2(0)) THEN BEGIN
        D = ds
        alast = alt
        return
      ENDIF
;
;       LOWER MESOSPHERE/UPPER STRATOSPHERE [between ZN3(0) and ZN2(0)]
;         Temperature at nodes and gradients at end nodes
;         Inverse temperature a linear function of spherical harmonics
;         Only calculate nodes if input changed
       IF (V1 EQ 1. OR ALAST GE ZN2(0)) THEN begin
          TGN2(0)=TGN1(1)
          TN2(0)=TN1(4)
          TN2(1)=PMA(0,0)*PAVGM(0)/(1.-SW(19)*GLOB7S(PMA(*,0)))
          TN2(2)=PMA(0,1)*PAVGM(1)/(1.-SW(19)*GLOB7S(PMA(*,1)))
          TN2(3)=PMA(0,2)*PAVGM(2)/(1.-SW(19)*SW(21)*GLOB7S(PMA(*,2)))
          TGN2(1)=PAVGM(8)*PMA(0,9)*(1.+SW(19)*SW(21)*GLOB7S(PMA(*,9))) $
                 *TN2(3)*TN2(3)/(PMA(0,2)*PAVGM(2))^2
          TN3(0)=TN2(3)
       ENDIF
       IF (ALT lt ZN3(0)) then begin
;
;       LOWER STRATOSPHERE AND TROPOSPHERE [below ZN3(0)]
;         Temperature at nodes and gradients at end nodes
;         Inverse temperature a linear function of spherical harmonics
;         Only calculate nodes if input changed
           IF (V1 EQ 1. OR ALAST GE ZN3(0)) THEN BEGIN
               TGN3(0)=TGN2(1)
               TN3(1 )=PMA(0,3)*PAVGM(3)/(1.-SW(21)*GLOB7S(PMA(*,3)))
               TN3(2) =PMA(0,4)*PAVGM(4)/(1.-SW(21)*GLOB7S(PMA(*,4)))
               TN3(3) =PMA(0,5)*PAVGM(5)/(1.-SW(21)*GLOB7S(PMA(*,5)))
               TN3(4) =PMA(0,6)*PAVGM(6)/(1.-SW(21)*GLOB7S(PMA(*,6)))
               TGN3(1)=PMA(0,7)*PAVGM(7)*(1.+SW(21)*GLOB7S(PMA(*,7)))$
                       *TN3(4)*TN3(4)/(PMA(0,6)*PAVGM(6))^2
           ENDIF
       endif
;          LINEAR TRANSITION TO FULL MIXING BELOW ZN2(1)
       dmc = 0.
       if (alt gt zmix) then DMC=1.-(ZN2(0)-ALT)/(ZN2(0)-ZMIX)
       dz28 = ds(2)
;
; do n2 density by default
       n2density_low,alt,ds,tz,dm28m,dmc,d
;
; handle lower atmosphere mass cases
       case MASS of
           0: DD=DENSM(ALT,1.,0,TZ,ZN3,TN3,TGN3,ZN2,TN2,TGN2)
           1: d(6) = 0.                                   ;h density
           4: hedensity_low,ds,tz,dz28,dmc,d
          14: d(7) = 0.                                   ;n density
          16: d([1,8]) = 0.                               ;o & o anom density
          17: d(8) = 0.                                   ;o anom density
          28:                                             ;already computed
          32: o2density_low,ds,tz,dz28,dmc,d
          40: ardensity_low,ds,tz,dz28,dmc,d
          48: begin
              hedensity_low,ds,tz,dz28,dmc,d
              d([1,8]) = 0.                               ;o & o anom density
              o2density_low,ds,tz,dz28,dmc,d
              ardensity_low,ds,tz,dz28,dmc,d
              d(6) = 0.                                   ;h density
              d(7) = 0.                                   ;n density
;
;       TOTAL MASS DENSITY
              D(5) = 1.66E-24*total([4.,16.,28.,32.,40.,1.,14.]*$
                                    D([0,1,2,3,4,6,7])          )
              end
          49: begin
              d([1,8]) = 0.                               ;o & o anom density
              o2density_low,ds,tz,dz28,dmc,d
              end
        else: message,"Invalid mass selection.  Check logic of CASE statement."
       endcase
;
; For drag mass density, include the anomalous oxygen
       if DRAG then $
          D(5) = 1.66E-24*total([4.,16.,28.,32.,40.,1.,14.,16.]*$
                                D([0,1,2,3,4,6,7,8])          )
;
; handle MKS conversion
       IF (IMR EQ 1) THEN d = d*[1e6,1e6,1e6,1e6,1e6,1e3,1e6,1e6,1e6]
       T(1)=TZ
       ALAST=ALT
       return
       end
;-----------------------------------------------------------------------
;
;
;
function MSIS2K,Zin,YYYYDDD,UTSEC,LAT,LON,SLTHR,F10AVG,F10,APINDX,$
                mass=massno,meters=meters,switches=switches,drag=drg,$
                t_inf_in=t_inf_in  ,s_bates_in=s_bates_in  ,t_lb_in=t_lb_in,$
                t_inf_out=t_inf_out,s_bates_out=s_bates_out,t_lb_out=t_lb_out
                
     if n_params(0) lt 2 then  begin
      print,'function MSIS2K,Zin,YYYYDDD,UTSEC,LAT,LON,SLTHR,F10AVG,F10,APINDX'   
      return,0
      endif      
;
;     DRIVER ROUTINE for IDL version of MSIS2000
;     -----------
;        Neutral Atmosphere Empirical Model from the surface to lower
;        exosphere
;
;        NEW FEATURES:
;          *Extensive satellite drag database used in model generation
;          *Revised O2 (and O) in lower thermosphere
;          *Additional nonlinear solar activity term
;          *"ANOMALOUS OXYGEN" NUMBER DENSITY, OUTPUT D(9)
;           At high altitudes (> 500 km), hot atomic oxygen or ionized
;           oxygen can become appreciable for some ranges of subroutine
;           inputs, thereby affecting drag on satellites and debris. We
;           group these species under the term "anomalous oxygen," since
;           their individual variations are not presently separable with
;           the drag data used to define this model component.
;
;        SUBROUTINES FOR SPECIAL OUTPUTS:
;
;        HIGH ALTITUDE DRAG: EFFECTIVE TOTAL MASS DENSITY
;        (SUBROUTINE GTD7D, OUTPUT D(6))
;           For atmospheric drag calculations at altitudes above 500 km,
;           call SUBROUTINE GTD7D to compute the "effective total mass
;           density" by including contributions from "anomalous oxygen."
;           See "NOTES ON OUTPUT VARIABLES" below on D(6).
;
;        PRESSURE GRID (SUBROUTINE GHP7)
;          See subroutine GHP7 to specify outputs at a pressure level
;          rather than at an altitude.
;
;        OUTPUT IN M-3 and KG/M3:   CALL METERS(.TRUE.)
;
;     INPUT VARIABLES:
;        IYD - YEAR AND DAY AS YYDDD (day of year from 1 to 365 (or 366))
;              (Year ignored in current model)
;        SEC - UT(SEC)
;        ALT - ALTITUDE(KM)
;        GLAT - GEODETIC LATITUDE(DEG)
;        GLONG - GEODETIC LONGITUDE(DEG)
;        STL - LOCAL APPARENT SOLAR TIME(HRS; see Note below)
;        F107A - 81 day AVERAGE OF F10.7 FLUX (centered on day DDD)
;        F107 - DAILY F10.7 FLUX FOR PREVIOUS DAY
;        AP - MAGNETIC INDEX(DAILY) OR WHEN SW(9)=-1. :
;           - ARRAY CONTAINING:
;             (1) DAILY AP
;             (2) 3 HR AP INDEX FOR CURRENT TIME
;             (3) 3 HR AP INDEX FOR 3 HRS BEFORE CURRENT TIME
;             (4) 3 HR AP INDEX FOR 6 HRS BEFORE CURRENT TIME
;             (5) 3 HR AP INDEX FOR 9 HRS BEFORE CURRENT TIME
;             (6) AVERAGE OF EIGHT 3 HR AP INDICIES FROM 12 TO 33 HRS PRIOR
;                    TO CURRENT TIME
;             (7) AVERAGE OF EIGHT 3 HR AP INDICIES FROM 36 TO 57 HRS PRIOR
;                    TO CURRENT TIME
;        MASS - MASS NUMBER (ONLY DENSITY FOR SELECTED GAS IS
;                 CALCULATED.  MASS 0 IS TEMPERATURE.  MASS 48 FOR ALL.
;                 MASS 17 IS Anomalous O ONLY.)
;
;     NOTES ON INPUT VARIABLES:
;        UT, Local Time, and Longitude are used independently in the
;        model and are not of equal importance for every situation.
;        For the most physically realistic calculation these three
;        variables should be consistent (STL=SEC/3600+GLONG/15).
;        The Equation of Time departures from the above formula
;        for apparent local time can be included if available but
;        are of minor importance.
;
;        F107 and F107A values used to generate the model correspond
;        to the 10.7 cm radio flux at the actual distance of the Earth
;        from the Sun rather than the radio flux at 1 AU. The following
;        site provides both classes of values:
;        ftp://ftp.ngdc.noaa.gov/STP/SOLAR_DATA/SOLAR_RADIO/FLUX/
;
;        F107, F107A, and AP effects are neither large nor well
;        established below 80 km and these parameters should be set to
;        150., 150., and 4. respectively.
;
;     OUTPUT VARIABLES:
;        D(1) - HE NUMBER DENSITY(CM-3)
;        D(2) - O NUMBER DENSITY(CM-3)
;        D(3) - N2 NUMBER DENSITY(CM-3)
;        D(4) - O2 NUMBER DENSITY(CM-3)
;        D(5) - AR NUMBER DENSITY(CM-3)
;        D(6) - TOTAL MASS DENSITY(GM/CM3)
;        D(7) - H NUMBER DENSITY(CM-3)
;        D(8) - N NUMBER DENSITY(CM-3)
;        D(9) - Anomalous oxygen NUMBER DENSITY(CM-3)
;        T(1) - EXOSPHERIC TEMPERATURE
;        T(2) - TEMPERATURE AT ALT
;
;     NOTES ON OUTPUT VARIABLES:
;        TO GET OUTPUT IN M-3 and KG/M3:   CALL METERS(.TRUE.)
;
;        O, H, and N are set to zero below 72.5 km
;
;        T(1), Exospheric temperature, is set to global average for
;        altitudes below 120 km. The 120 km gradient is left at global
;        average value for altitudes below 72 km.
;
;        D(6), TOTAL MASS DENSITY, is NOT the same for subroutines GTD7
;        and GTD7D
;
;          SUBROUTINE GTD7 -- D(6) is the sum of the mass densities of the
;          species labeled by indices 1-5 and 7-8 in output variable D.
;          This includes He, O, N2, O2, Ar, H, and N but does NOT include
;          anomalous oxygen (species index 9).
;
;          SUBROUTINE GTD7D -- D(6) is the "effective total mass density
;          for drag" and is the sum of the mass densities of all species
;          in this model, INCLUDING anomalous oxygen.
;
;     SWITCHES: The following is for test and special purposes:
;
;        TO TURN ON AND OFF PARTICULAR VARIATIONS CALL TSELEC(SW),
;        WHERE SW IS A 25 ELEMENT ARRAY CONTAINING 0. FOR OFF, 1.
;        FOR ON, OR 2. FOR MAIN EFFECTS OFF BUT CROSS TERMS ON
;        FOR THE FOLLOWING VARIATIONS
;               1 - F10.7 EFFECT ON MEAN  2 - TIME INDEPENDENT
;               3 - SYMMETRICAL ANNUAL    4 - SYMMETRICAL SEMIANNUAL
;               5 - ASYMMETRICAL ANNUAL   6 - ASYMMETRICAL SEMIANNUAL
;               7 - DIURNAL               8 - SEMIDIURNAL
;               9 - DAILY AP             10 - ALL UT/LONG EFFECTS
;              11 - LONGITUDINAL         12 - UT AND MIXED UT/LONG
;              13 - MIXED AP/UT/LONG     14 - TERDIURNAL
;              15 - DEPARTURES FROM DIFFUSIVE EQUILIBRIUM
;              16 - ALL TINF VAR         17 - ALL TLB VAR
;              18 - ALL TN1 VAR           19 - ALL S VAR
;              20 - ALL TN2 VAR           21 - ALL NLB VAR
;              22 - ALL TN3 VAR           23 - TURBO SCALE HEIGHT VAR
;
;        To get current values of SW: CALL TRETRV(SW)
;
      COMMON MSIS2KDAT,IYD,SEC,GLAT,GLONG,STL,F107A,F107,AP,MASS,YRD,DRAG
      COMMON PARM7,PT,PD,PS,PDL,PTL,PMA,SAM,PARMFL
      COMMON CSW,SW,ISW,SWC
      COMMON DATIME,ISDATE,ISTIME,NAME
      COMMON METSEL,IMR
;
; Define some variables
;
      SV=replicate(1,25)        ;software switches "on" by default
;
; Parse the input parameters:
;    1. Rename input variables to allow storage in common blocks
;    2. Rename to avoid altering values in calling program
;
      Z = float(Zin)
      Z = Z(sort(z))               ;Ensure monotonically increasing order
      IYD = LONG(YYYYDDD(0))
      YRD = float(IYD)
      SEC = float(UTSEC(0))
      GLAT = float(LAT(0))
      GLONG = float(LON(0))
      STL = SLTHR(0)
      F107A = float(f10avg(0))
      F107 = float(f10(0))
      AP = fltarr(7)
      AP(0) = APINDX
      if n_elements(massno) eq 0 then mass = 48 else mass = massno(0)
      if keyword_set(meters) then IMR = 1 else IMR = 0
      if keyword_set(drg) then DRAG = 1 else DRAG = 0
      if keyword_set(switches) then $
          tselec,switches $
      else if n_elements(isw) eq 1 then begin
          if isw eq 64999 then begin
              code = string(fix(2*swc-sw),"$(25i1)")
              if code ne '1111111111111111111111111' then $
                  message,"Software switches are set: "+code,/info
          endif
      endif else $
          tselec,replicate(1,25)
;
; Mass/species selections
;
      MT = [48,0,4,16,28,32,40,1,49,14,17]
      select = where(mass eq mt)
      if select(0) eq -1 then begin
          message,"Invalid mass selection.  Defaults to 48 (full set).",/info
          mass = 48
      endif
;
; Create output structure
;
npoints = n_elements(z)
d = fltarr(npoints)
par0 = new_model_atmos_par()
yd_mmddyyyyhhmmss,YYYYDDD+UTSEC/86400D,mm_temp,dd_temp,yyyy_temp,$
                  hh_temp,mi_temp,ss_temp
par0.met = ut2met(yyyy_temp,mm_temp,dd_temp+utsec/86400d0)
time_temp = met2ut(par0.met)
par0.year = time_temp.year
par0.month = time_temp.month
par0.day = time_temp.day
par0.hour = time_temp.hour
par0.min = time_temp.min
par0.sec = time_temp.sec
par0.secondofday = time_temp.secondofday
par0.secondofweek = time_temp.secondofweek
par0.dayofweek = time_temp.dayofweek
par0.dayname = time_temp.dayname
par0.dayofyear = time_temp.dayofyear
par0.julian = time_temp.julian
par0.lon = glong
par0.lat = glat
par0.solar_local_time = stl
par0.f10 = f107
par0.f10a = f107a
par1 = create_struct(name='MSIS2000_atm_par',par0, 'ap', fix(ap),$
                     'mass', fix(mass),'s_bates',0.)
atm = create_struct('par', par1, 'z', z, 'tinf', d(0), 't', d, 'he', d, 'o', d, $
                    'n2', d, 'o2', d, 'ar', d, 'h', d, 'n', d, 'tot_m', d , $
                    'o_anom',d, NAME=strcompress(string(npoints,"$('MSIS2000_',i9)"),/remove_all))
;
; Have variables been initialized?  If not, IFL will be undefined
; Were they initialized by MSIS86 or MSIS90?
if (n_elements(PARMFL) eq 0) then $
    GTD7BK $
else if (name(0) ne 'MSISE-00') then $
    GTD7BK


;
;-- HERE IS WHERE THE LOOP FOR ALTITUDE BEGINS--
;
;
; temporary output variables
;
d = fltarr(9)
t = fltarr(2)
output = fltarr(npoints,10)
for IALT = 0,NPOINTS-1 do begin
      GTD7,z(IALT),D,T,t_inf_in=t_inf_in  ,s_bates_in=s_bates_in  ,t_lb_in=t_lb_in,$
                       t_inf_out=t_inf_out,s_bates_out=s_bates_out,t_lb_out=t_lb_out
      output(ialt, *) = [d,T(1)]
endfor
atm.par.s_bates = s_bates_out
;
; Load results into structure
;
atm.t      = output(*,9)
atm.tinf   = t_inf_out
atm.he     = output(*,0)
atm.o      = output(*,1)
atm.n2     = output(*,2)
atm.o2     = output(*,3)
atm.ar     = output(*,4)
atm.h      = output(*,6)
atm.n      = output(*,7)
atm.o_anom = output(*,8)
atm.tot_m  = output(*,5)
RETURN,atm
END

